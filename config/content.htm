<h1>About</h1>
<p>這裡是國立虎尾科技大學機械設計工程系 $($National Formosa University, Dept. of Mechanical Design Engineering, Taiwan) <a href="http://lab.kmol.info/blog/index.html">KMOLab</a> 所屬的網站. 主要提供與計算機程式, 網際內容管理, 電腦輔助設計與實習, 以及協同產品設計實習等課程相關資料.</p>
<p><a href="http://mde.tw/lab">http://mde.tw/lab</a> 是未來五年, 與 <a href="http://lab.kmol.info/blog/index.html">KMOLab</a> 有關教學課程與研究方向的規劃網站, <a href="https://chiamingyen.github.io/kmolab/blog/pages/about/">KMOLab</a> 是知識管理與最佳化應用實驗室 $($Knowledge Management and Optimal utilization Laboratory) 的簡稱, 實驗室的目的在鼓勵技職體系學員, 透過長期的專題學習與研究履歷積累, 進行與機電資整合產品有關的設計工具開發 [<a href="https://www.pyslvs.com">1</a>][<a href="https://github.com/KmolYuan/Pyslvs-UI">2</a>]. 並依此研究成果, 在國內外一流學府取得碩士以上學位.</p>
<p><a href="https://wcm.kmol.info:8443/">https://wcm.kmol.info:8443/</a> $($For kmolers only)</p><h2>Lab logo</h2>
<h4><a href="http://lab.kmol.info/blog/index.html">KMOLab</a> logo images</h4>
<p><img alt="" height="87" src="/images/kmol_1172x340_red_3yrs.png" width="300"/></p>
<p><img alt="" height="87" src="/images/kmol_1172x340_yellow_3yrs.png" width="300"/></p>
<p><img alt="" height="87" src="/images/kmol_1172x340_blue_3yrs.png" width="300"/></p>
<p><img alt="" height="87" src="/images/kmol_1172x340_green_3yrs.png" width="300"/></p>
<p><img alt="" height="87" src="/images/kmol_1172x340_color_3yrs.png" width="300"/></p>
<p><img alt="" height="87" src="/images/kmol_1172x340_bw_3yrs.png" width="300"/></p>
<p><img alt="" height="300" src="/images/kmol_rotary_570x570.png" width="300"/></p>
<p><img caption="false" height="264" src="/images/3yrs_camel.jpg" width="300"/></p>
<h4><a href="http://lab.kmol.info/blog/index.html">KMOLab</a> T-shirt</h4>
<p><img alt="" height="400" src="/images/kmolab_banner_tshirt.jpg" width="400"/></p>
<p><img alt="" height="400" src="/images/kmolab_rotary_tshirt.jpg" width="400"/></p>
<p></p>
<p></p>
<p style="padding-left: 30px;"></p><h2>MDE</h2>
<p>Mechanical Design Engineer 的四大類本職學能組成</p>
<p><img alt="" height="536" src="/images/mde_cmpp_ck_color.png" width="500"/></p>
<p>Mechanical Design Engineering</p>
<p>Programming (tool, <span>concept vs. knowledge, use vs. develop</span>)<br/>    to use the power of computer<br/>    to take advantage of virtualization<br/>Math (tool, <span>concept vs. knowledge, use vs. develop</span>)<br/>    to justify your design analytically<br/>Presentation (concept vs. knowledge, output)<br/>    with spoken language<br/>    with visual tools (2D, 3D, animation)<br/>    with text<br/>    with design prototype<br/>Communication (concept vs. knowledge, input)<br/>    with colleague<br/>    with customer<br/>    with literature</p>
<p>concept vs. knowledge</p>
<p>use vs. develop</p><h2>隨身程式系統</h2>
<p><a href="https://drive.google.com/open?id=1cVJ1LOKzXerjfFyYOMlXGqoPg8DGiJSf">WCM2020_8g.7z</a> (登入 @gm 帳號後下載)</p>
<h4>KMOLab 所使用的 Windows 64 位元可攜程式系統包含下列工具:</h4>
<p>Python3</p>
<p style="padding-left: 30px;">pip</p>
<p style="padding-left: 30px;">flask</p>
<p style="padding-left: 30px;">flask_cors</p>
<p style="padding-left: 30px;">lxml</p>
<p style="padding-left: 30px;">bs4</p>
<p style="padding-left: 30px;">markdown</p>
<p style="padding-left: 30px;">leo</p>
<p style="padding-left: 30px;">sympy</p>
<p style="padding-left: 30px;">cv2</p>
<p style="padding-left: 30px;">numpy</p>
<p style="padding-left: 30px;">scipy</p>
<p style="padding-left: 30px;">imutils</p>
<p>Tiny C</p>
<p>SciTE</p>
<p>ShareX</p>
<p>Process explorer</p>
<p>Msys2</p>
<p>Solvespace</p>
<p>Pyslvs-UI</p>
<p>CoppeliaSim</p>
<p>Webots</p>
<p>Range3</p>
<p>GIMP</p>
<p>Inkscape</p>
<p>Dia</p>
<p>OBS</p>
<p>Dart sdk</p>
<p>Flutter sdk</p>
<p>Visual studio code</p>
<p>Virtualbox</p>
<p>Ubuntu</p>
<p>Sketchbook</p><h2>Github</h2>
<h4>Git Commands</h4>
<p>git add .</p>
<p>git commit -m "commint message"</p>
<p>git push</p>
<p>git clone</p>
<p>git clone --recurse-submodules url_of_repo</p>
<p>git status</p>
<p>git checkout</p>
<p>git submodule add url_of_repo local_directory</p>
<p>git submodule init</p>
<p>git submodule update --recursive</p>
<p>git branch</p>
<p>git pull</p>
<p>git merge</p>
<p>git remote add name url_of_repo</p>
<h4><a href="https://pages.github.com/">Github Pages</a></h4>
<p style="padding-left: 30px;"><a href="https://pages.github.com/">Github Pages</a> 為 Github 所提供的倉儲內容網頁伺服器. 使用者可以將倉儲主分支, gh-pages 分支或 docs 目錄中的 HTML, 利用 Github Pages 設定, 轉為以使用者帳號及倉儲名稱所組成的網站.</p>
<p style="padding-left: 30px;">例如: 將 github_account 中名稱為 repo 的倉儲內容設為 Github Pages 網站後, 其網址為: <a href="https://github_account.github.io/repo">https://github_account.github.io/repo</a>.</p>
<p style="padding-left: 30px;">若使用者設為 Girhub Pages 之倉儲名稱為 github_account.github.io, 則所設定的 Github Pages 網站名稱將為:</p>
<p style="padding-left: 30px;">https://github_account.github.io</p>
<h4>Github SSH</h4>
<p style="padding-left: 30px;">使用者從近端將工作目錄中的資料推送到 Github, 可以選擇 Https 或 SSH 連線協定.</p>
<p style="padding-left: 30px;">使用者提交 Github 倉儲內容改版之前, 必須利用 git config 進行身份與代理主機的設定.</p>
<p style="padding-left: 60px;">git config --edit --system</p>
<p style="padding-left: 60px;">git config --global user.name "github_account"</p>
<p style="padding-left: 60px;">git config --global user.email "your_github_account _register email"</p>
<p style="padding-left: 60px;">git config --global http.proxy=http://proxy_server:3128</p>
<p style="padding-left: 60px;">若設 IPv6 主機則使用:</p>
<p style="padding-left: 90px;">git config --global http.proxy=http://[2001::ip_address]:3128</p>
<p style="padding-left: 60px;">--global 表示要存擋到啟動隨身碟 home 目錄中的 .gitconfig 設定檔</p>
<p style="padding-left: 60px;">若 git config 不使用 --global 表示該設定僅此命令 session 有效.</p>
<p style="padding-left: 30px;">假如要在 Windows 10 操作系統中, 將倉儲設定使用 SSH 網路協定推送, 則需完成下列步驟:</p>
<p>1. 下載 Putty 工具組</p>
<p style="padding-left: 30px;"><span>從 </span><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/" rel="nofollow">https://www.chiark.greenend.org.uk/~sgtatham/putty/</a><span><span> </span>下載一般版, 或從<span> </span></span><a href="http://jakub.kotrla.net/putty/" rel="nofollow">http://jakub.kotrla.net/putty/</a><span><span> </span>下載特殊的可攜版本.</span></p>
<p><span>2. 利用 y:\portablegit\bin\sh.exe 進入 shell 命令環境後, 以 <br/></span></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ssh-keygen -t rsa -b 4096 -C "使用者學號"</pre>
<p style="padding-left: 30px;">在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key</p>
<p style="padding-left: 30px;">之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -&gt; SSH and GPG keys 頁面下.</p>
<p>3. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定.</p>
<p>修改啟動的 start.bat 加入下列設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<div>
<div class="syntaxhighlighter js" id="highlighter_31185"></div>
</div>
<p>4. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.</p>
<p>開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection-&gt;SSH-&gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. </p>
<p>並在 Connection-&gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128.</p>
<p>5. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># no proxy at home
#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p
# set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup
ProxyCommand y:/putty/plink.exe github.com %h %p
  
Host github.com
    User git
    Port 22
    Hostname github.com
     
    # for connect.exe need openssh key format
    #IdentityFile "y:\home\.ssh\id_rsa_mdecourse"
    # for plink.exe need rsa key format but set under putty github.com session
    # plink.exe do not need the following setting
    #IdentityFile "y:\home\.ssh\mdecourse_putty_private.ppk"
  
    TCPKeepAlive yes
    IdentitiesOnly yes</pre>
<div>
<div class="syntaxhighlighter js" id="highlighter_585341"></div>
</div>
<p>6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[core]
    repositoryformatversion = 0
    filemode = false
    bare = false
    logallrefupdates = true
    symlinks = false
    ignorecase = true
[submodule]
    active = .
[remote "origin"]
    #url = https://github.com/mdecourse/wcmj2020.git
    url = git@github.com:mdecourse/wcmj2020.git
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
    remote = origin
    merge = refs/heads/master
[submodule "cmsimde"]
    url = https://github.com/mdecourse/cmsimde.git</pre>
<div>
<div class="syntaxhighlighter js" id="highlighter_731483"></div>
</div>
<p>之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push.</p><h2>Leo Editor</h2>
<p><a href="https://leoeditor.com/">https://leoeditor.com/</a> </p>
<p><a href="https://kaleguy.github.io/leovue/">https://kaleguy.github.io/leovue/</a> </p><h2>Kaggle Learn</h2>
<p><a href="https://www.kaggle.com/learn/overview">https://www.kaggle.com/learn/overview</a> </p>
<h2>Pandoc</h2>
<p><a href="https://pandoc.org/MANUAL.html">https://pandoc.org/MANUAL.html</a> </p><h2>Virtualbox</h2>
<p><a href="https://drive.google.com/open?id=143jFMheM1xjLxhLkSAouThLzj3WUYX6_">Ubuntu 20.04 for cd2020pj1.ova</a> (<a href="https://drive.google.com/open?id=13Gqwyj0CGR6wa9dZg_BmlCLv5cNYWQJ_">W12 version)</a> (for @gm users only)</p>
<p><a href="https://drive.google.com/open?id=1yDdGMWEzVvnuaqZ9a_VXYSAr-N4cer4K">Win10 comsol5.ova</a> (for @gm users only)</p>
<h4>Ｕbuntu 20.04 安裝 Chrome</h4>
<p style="padding-left: 30px;">sudo apt install gdebi-core wget</p>
<p style="padding-left: 30px;">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</p>
<p style="padding-left: 30px;">sudo gdebi google-chrome-stable_current_amd64.deb</p>
<p style="padding-left: 30px;">google-chrome</p>
<p style="padding-left: 30px;"> 因為 Ubuntu 中的 Chrome 使用操作系統中的 Proxy 設定, 若採 IPv6 Proxy 使用 fe80::1 格式, 且無需前後加上中括號. 但若修改系統 Proxy 設定後, Chrome 必須重新啟動後才可生效.</p><h2>Pyslvs-UI</h2>
<p><a href="https://pypi.org/project/pyslvs-ui/">https://pypi.org/project/pyslvs-ui/</a> </p>
<p><a href="https://github.com/KmolYuan/Pyslvs-UI">https://github.com/KmolYuan/Pyslvs-UI</a></p>
<p><a href="https://www.pyslvs.com/">https://www.pyslvs.com/</a></p>
<p>論壇: <a href="https://gitter.im/pyslvs-ui/forum">https://gitter.im/pyslvs-ui/forum</a></p><h2>Fossil SCM</h2>
<p><a href="http://mde.tw/cp2019/content/Fossil%20SCM.html">http://mde.tw/cp2019/content/Fossil%20SCM.html</a></p>
<p>Fossil SCM 是一套軟體組態管理 (Software Configuration Management) 系統, 其中包含分散式版次控管 (DVC, Distributed Version Control) 、Wiki 、Forum、Bug Tracking 與 Technote 等功能, 可以用來控制及追蹤軟體開發專案, 並且紀錄專案開發歷程.</p>
<h4>安裝 Fossil SCM</h4>
<h4>Windows</h4>
<p style="padding-left: 30px;">從 <a href="https://fossil-scm.org/home/uv/download.html">https://fossil-scm.org/home/uv/download.html</a> 下載 Windows 64 位元 2.11 版, 解開壓縮檔案, 將 fossil.exe 放入隨身程式系統的 Y:\ 即可在命令列利用:</p>
<p style="padding-left: 60px;">fossil version</p>
<p style="padding-left: 30px;">查詢版本.</p>
<h4>MacOS</h4>
<p style="padding-left: 30px;">從 <a href="https://fossil-scm.org/home/uv/download.html">https://fossil-scm.org/home/uv/download.html</a> 下載 MacOS 版本後, 自動解開壓縮取得 fossil 可執行檔案後, 以 env 查詢 PATH 路徑設定, 可以利用:</p>
<p style="padding-left: 60px;">cd</p>
<p style="padding-left: 60px;">cd Downloads</p>
<p style="padding-left: 60px;">sudo mv fossil /opt/local/bin</p>
<p style="padding-left: 30px;">先更換目錄到帳號 home 之後, 進入 Downloads 目錄, 將 fossil 放到 /opt/local/bin 目錄中, 接著就可以利用:</p>
<p style="padding-left: 60px;">fossil version</p>
<p style="padding-left: 30px;">查詢版本.</p>
<p style="padding-left: 30px;">但若該 fossil 並沒有經由 Apple 公證 (notarized), 則必須至 System Preferences - Security &amp; Privacy - General 中, 針對 "fossil" was blocked from use because it is not from an identified developer 項目, 選擇 "Allow Anyway".</p>
<p style="padding-left: 30px;">截至 2020.05.23, Fossil SCM 的 MacOS 2.11 與 2.10 版都未經過 Apple 公證.</p>
<h4>Ubuntu</h4>
<p style="padding-left: 30px;">從 <a href="https://fossil-scm.org/home/uv/download.html">https://fossil-scm.org/home/uv/download.html</a> 下載 Linux X64 版本後, 解開壓縮檔案後, 將 fossil 放到 /usr/bin 目錄後, 即可利用:</p>
<p style="padding-left: 60px;">fossil version</p>
<p style="padding-left: 30px;">查詢版本.</p>
<p style="padding-left: 30px;">或者利用 sudo apt install fossil 安裝.</p>
<h3>配置 Fossil SCM</h3>
<h4>Ubuntu</h4>
<p style="padding-left: 30px;">sudo apt install fossil stunnel</p>
<p style="padding-left: 30px;">在 /etc/environment 檔案中加入:</p>
<p style="padding-left: 60px;">HTTPS=on</p>
<p style="padding-left: 30px;">在 /etc/default/stunnel4 檔案中加入</p>
<p style="padding-left: 60px;">ENABLED=1</p>
<p style="padding-left: 30px;">利用</p>
<p style="padding-left: 60px;">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout stunnel.key -out stunnel.crt</p>
<p style="padding-left: 30px;">在 /etc/stunnel 目錄中建立 stunnel.key 與 stunnel.crt</p>
<p style="padding-left: 30px;">接著建立 /etc/stunnel/stunnel.conf</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[https]
accept=kmol2020:5443
accept=:::5443
cert=/etc/stunnel/stunnel.crt
key=/etc/stunnel/stunnel.key
exec=/usr/bin/fossil
execargs=/usr/bin/fossil http /home/kmol2020/repository/ --https --nojail --notfound kmol2020</pre>
<p>在 /home/kmol2020/ 建立 repository 目錄, 以及 kmol2020.fossil 後, 以 /etc/init.d/stunnel4 restart 重新啟動伺服器.</p>
<p>管理者可以從 <a href="https://[:1]:5443">https://[::1]:5443</a> 登入.</p><h1>計算機程式</h1>
<p>計算機程式是工程師解決問題的工具之一, 而工程師希望利用計算機程式解決問題之前需要對電腦與其周遭環境相關的事項有所了解</p>
<h4>電腦基本軟硬體術語及功能</h4>
<p style="padding-left: 30px;">html: <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML">https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML</a></p>
<p style="padding-left: 30px;">css: <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps">https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps</a></p>
<h4>電腦網路設定與應用</h4>
<h4>電腦程式語言:</h4>
<h4 style="padding-left: 30px;">Javascript</h4>
<p style="padding-left: 60px;"><a href="https://drive.google.com/open?id=18StxYXFRbJzQiwOjkiMEAMYToX96-Hyq">Javascript course note.pdf</a></p>
<p style="padding-left: 60px;">https://javascript.info/</p>
<p style="padding-left: 60px;"><a href="https://www.khanacademy.org/computing/computer-programming">https://www.khanacademy.org/computing/computer-programming</a></p>
<h4 style="padding-left: 30px;">C</h4>
<p style="padding-left: 60px;"><a href="https://modernc.gforge.inria.fr/">https://modernc.gforge.inria.fr/</a> (<a href="https://drive.google.com/open?id=1gEndnExRZ-WR7yPQL1IxIQAN4Btu7dM-">Modern C.pdf</a>)</p>
<p style="padding-left: 60px;"><a href="http://karadev.net/uroci/filespdf/files/Programming-in-ANSI-C.pdf">http://karadev.net/uroci/filespdf/files/Programming-in-ANSI-C.pdf</a> (<a href="https://drive.google.com/open?id=1pgE-xT3mFbfEK3fC532z15kp-L0QdNaJ">Programming-in-ANSI-C.pdf)</a></p>
<h4 style="padding-left: 30px;">Dart</h4>
<p style="padding-left: 60px;"><a href="https://en.wikipedia.org/wiki/Dart_(programming_language)">https://en.wikipedia.org/wiki/Dart_(programming_language)</a></p>
<p style="padding-left: 60px;"><a href="https://dartpad.github.io">https://dartpad.github.io</a></p>
<p style="padding-left: 60px;"><a href="https://flutter.dev/web">https://flutter.dev/web</a></p>
<h4 style="padding-left: 30px;">Python</h4>
<p style="padding-left: 60px;"><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/</a></p>
<p style="padding-left: 60px;"><a href="https://www.kaggle.com/learn/python">https://www.kaggle.com/learn/python</a></p>
<p style="padding-left: 60px;"><a href="http://do1.dr-chuck.com/pythonlearn/EN_us/pythonlearn.pdf">http://do1.dr-chuck.com/pythonlearn/EN_us/pythonlearn.pdf</a></p>
<p style="padding-left: 90px;"><a href="https://drive.google.com/open?id=1tYFRytEEkPuuUTE4O9Q6AURaHcU598BV">Python-for-everyone.pdf</a></p>
<h4>資料結構</h4>
<p style="padding-left: 30px;"><a href="https://opendatastructures.org/ods-cpp.pdf">https://opendatastructures.org/ods-cpp.pdf</a> (C++)</p>
<p style="padding-left: 30px;"><a href="https://www.cs.auckland.ac.nz/compsci105s1c/resources/ProblemSolvingwithAlgorithmsandDataStructures.pdf">https://www.cs.auckland.ac.nz/compsci105s1c/resources/ProblemSolvingwithAlgorithmsandDataStructures.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://drive.google.com/open?id=17S_Bb1O7JiMYGHdU6sQ4CYwAhHPC5E8B">利用資料結構與演算法解題.pdf </a>(Python)</p>
<h4>Reference:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/TryItOnline/tryitonline">https://github.com/TryItOnline/tryitonline</a></p><h2>CMSiMDE</h2>
<p>你需要一個 World Wide Web Page, 帶有分門別類的標題與內容, 能夠紀錄日誌, 可以直接在瀏覽器上進行簡報, 無論是在廣域網路, 區域網路或單一電腦上.</p>
<p><a href="https://github.com/mdecourse/cmsimde.git">CMSiMDE</a> 就是因應機械設計工程師需要建立上述</p>
<p style="padding-left: 30px;">網頁 (Web Page)</p>
<p style="padding-left: 30px;">簡報 (Web Presentation)</p>
<p style="padding-left: 30px;">網誌 (Web Blog)</p>
<p>而拼拼湊湊成的一套系統.</p>
<h4>建立靜態網頁</h4>
<h4 style="padding-left: 30px;">將 CMSiMDE 倉儲設為子模組</h4>
<h4 style="padding-left: 30px;">直接取用 CMSiMDE 程式內容</h4>
<h4>建立 CMSiMDE 伺服器</h4>
<h4 style="padding-left: 30px;">以 Ubuntu 20.04 為例</h4>
<h4>CMSiMDE 開發</h4>
<h4 style="padding-left: 30px;">Pelican 與 Blogger 網誌內容同步</h4><h3>Python</h3>
<p>Python Projects for Beginners (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5355-7">https://link.springer.com/book/10.1007/978-1-4842-5355-7</a> </p>
<p>Hands-on Scikit-Learn for Machine Learning Applications (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5373-1">https://link.springer.com/book/10.1007/978-1-4842-5373-1</a></p>
<p><a href="https://medium.com/@jdatascientist/tuning-tuning-scikit-learn-parameters-using-optimization-21e7ea2787d9">https://medium.com/@jdatascientist/tuning-tuning-scikit-learn-parameters-using-optimization-21e7ea2787d9</a></p>
<p><a href="/downloads/python3.7.2_tutorial.pdf">python 3.7.2 tutorial.pdf</a></p>
<p><a href="https://rd.springer.com/content/pdf/10.1007%2F978-3-030-20290-3.pdf">Begineers Guide to Python 3 Programming.pdf</a></p>
<p><a href="https://rd.springer.com/content/pdf/10.1007%2F978-3-030-18873-3.pdf">The Python Workbook.pdf</a></p>
<p>亂數分組與 CMSiMDE</p>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VjUBzMWyIHQ" width="560"></iframe></p>
<p>課程評分程式</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
根據評分表單中的 自評分數, 互評得分, 教師評分, 計算學員課程成績
'''

def diff(自評分數, 互評得分):
    return abs(自評分數 - 互評得分)
    
def max(自評分數, 互評得分):
    if 自評分數 &gt; 互評得分:
        return 自評分數
    else:
        return 互評得分

def 分組比分(自評分數, 互評得分):
    if diff(自評分數, 互評得分) &lt; 5:
        學員得分 = max(自評分數, 互評得分)
    else:
        學員得分 = 互評得分 - diff(自評分數, 互評得分)
    return 學員得分
    
def 全班比分(學員得分, 教師評分):
    if diff(學員得分, 教師評分) &lt; 5:
        學員成績 = max(學員得分, 教師評分)
    else:
        學員成績 = 教師評分 - diff(學員得分, 教師評分)/4
    return 學員成績

def 學員成績(自評分數, 互評得分, 教師評分):
    學員分組得分 = 分組比分(自評分數, 互評得分)
    學員課程成績 = 全班比分(學員分組得分, 教師評分)
    return 學員課程成績
    
print(學員成績(80, 70, 60))
print(學員成績(60, 70, 80))</pre>
<p></p>
<h4>Python 語法</h4>
<p>由於 Github Pages 不允許伺服 __init__.py 檔案, 因此下列範例中需要導入 ggame 的部分, 將無法在 Github Pages 網站中執行.</p>
<p>Python 3 官方教材: <a href="https://docs.python.org/3/index.html">https://docs.python.org/3/index.html</a></p>
<p>Python tutorial: <a href="https://docs.python.org/3/tutorial/index.html">https://docs.python.org/3/tutorial/index.html</a> (英文)</p>
<p>Python 教學: <a href="https://python-doc-tw.github.io/tutorial/index.html">https://python-doc-tw.github.io/tutorial/index.html</a></p>
<p>網頁上的 Python - Brython: <a href="https://www.brython.info/static_doc/en/intro.html">https://www.brython.info/static_doc/en/intro.html</a> (解譯式)</p>
<p>網頁上的 Python GUI- Flexx: <a href="https://flexx.readthedocs.io/en/stable/">https://flexx.readthedocs.io/en/stable/</a> (轉譯式)</p>
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<!-- Cango 程式庫 -->
<script src="/static/Cango-13v08-min.js"></script>
<script src="/static/CangoAxes-4v01-min.js"></script>
<script src="/static/gearUtils-05.js"></script>
<!-- for Konva 程式庫 -->
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<h4>開始練習 print() 用法, 並著手建立函式</h4>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Ace.editor.setValue("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
def helloWorld():
    print("Hello World!")
helloWorld()
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""")
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div>
<p><!-- ****************************** keyword start -->
<script type="text/python3">
from browser import document as doc
# 導入位於 static 目錄下的 beditor.py 
import beditor
# 利用 beditor.py 中的 editor 類別建立案例, 對應到 kw1
kw1 = beditor.editor("""# 導入 sys 模組
import sys
# 導入 keyword 模組
import keyword
# 利用 sys 模組中的 version_info 印出 Python 版次
print("Python version: ", sys.version_info)
# 利用 keyword 模組中的 kwlist 印出關鍵字
print("Python keywords: ", keyword.kwlist)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "keyword" 的按鈕點按時, 執行 kw1 物件中的 prog 方法
doc["keyword"].bind('click', kw1.prog)
</script>
</p>
<p><!-- ****************************** keyword end --></p>
<p><!-- ***************************** slide ex1 start --></p>
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Ex1 = beditor.editor("""# 導入 Ex1 原始碼
a = 0
def my_print(n, input_str):
    print("以下將重覆列印 '", input_str + "' " + str(n) + "次")
    for i in range(n):
        print(i, input_str)
my_print(5, "Hello World!")
the_str = "開始學習 Python"
num = input("請輸入要列印的次數!")
my_print(int(num), the_str)
a = a + 1
print("(" + str(a) + ")", "_" * 25)
def myfun():
    yield 1
    yield 2
    yield 3
for i in myfun():
    print(i)
x = iter(myfun())
y = list(myfun())
a = a + 1
print("(" + str(a) + ")", "_" * 25)
print(x.__next__())
print(x.__next__())
print(x.__next__())
print(y)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "ex1" 的按鈕點按時, 執行 Ex1 物件中的 prog 方法
doc["ex1"].bind('click', Ex1.prog)
</script>
</p>
<p><!-- ***************************** slide ex1 end --></p>
<p><!-- ***************************** slide ex2 start --></p>
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Ex2 = beditor.editor("""# Python 的內建資料型別
import math
def f():
    print("This is a user-defined function")
    return 42
print("Some basic types in Python:")
print(type(2))           # int
print(type(2.2))         # float
print(type("2.2"))       # str  (string)
print(type(2 < 2.2))     # bool (boolean)
print(type(math))        # module
print(type(math.tan))    # builtin_function_or_method ("function" in Brython)
print(type(f))           # function (user-defined function)
print(type(type(42)))    # type
print("#####################################################")
print("And some other types we will see later in the course...")
print(type(Exception())) # Exception
print(type(range(5)))    # range
print(type([1,2,3]))     # list
print(type((1,2,3)))     # tuple
print(type({1,2}))       # set
print(type({1:42}))      # dict (dictionary or map)
print(type(2+3j))        # complex  (complex number) (we may not see this type)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "ex2" 的按鈕點按時, 執行 Ex2 物件中的 prog 方法
doc["ex2"].bind('click', Ex2.prog)
</script>
</p>
<p><!-- ***************************** slide ex2 end --></p>
<p><!-- ***************************** slide ex3 start --></p>
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Ex3 = beditor.editor("""# Python 的內建常數與函式
# 內建常數
print("Some builtin constants:")
print(True)
print(False)
print(None)
print("And some more constants in the math module:")
import math
print(math.pi)
print(math.e)
# 內建函式
print("Type conversion functions:")
print(bool(0))   # convert to boolean (True or False)
print(float(42)) # convert to a floating point number
print(int(2.8))  # convert to an integer (int)
print("And some basic math functions:")
print(abs(-5))   # absolute value
print(max(2,3))  # return the max value
print(min(2,3))  # return the min value
print(pow(2,3))  # raise to the given power (pow(x,y) == x**y)
print(round(2.354, 1)) # round with the given number of digits
# other examples
print(3 * 2)
print(3 * "abc")
print(3 + 2)
print("abc" + "def")
print(3 + "def")
# Type Affect Semantics
print(3 * 2)
print(3 * "abc")
print(3 + 2)
print("abc" + "def")
print(3 + "def")
# Integer Division
print("The / operator does 'normal' float division:")
print(" 5/3  =", ( 5/3))
print()
print("The // operator does integer division:")
print(" 5//3 =", ( 5//3))
print(" 2//3 =", ( 2//3))
print("-1//3 =", (-1//3))
print("-4//3 =", (-4//3))
# Modulus or Remainder Operator (%)
print(" 6%3 =", ( 6%3))
print(" 5%3 =", ( 5%3))
print(" 2%3 =", ( 2%3))
print(" 0%3 =", ( 0%3))
print("-4%3 =", (-4%3))
print(" 3%0 =", ( 3%0))
# Verify that (a%b) is equivalent to (a-(a//b)*b)
def mod(a, b):
  return a - (a//b)*b
print(41%14, mod(41,14))
print(14%41, mod(14,41))
print(-32%9, mod(-32,9))
print(32%-9, mod(32,-9))
# Operator Order (Precedence and Associativity)
print("Precedence:")
print(2+3*4)  # prints 14, not 20
print(5+4%3)  # prints  6, not 0 (% has same precedence as *, /, and //)
print(2**3*4) # prints 32, not 4096 (** has higher precedence than *, /, //, and %)
print()
print("Associativity:")
print(5-4-3)   # prints -2, not 4 (- associates left-to-right)
print(4**3**2) # prints 262144, not 4096 (** associates right-to-left)
# Approximate Values of Floating-Point Numbers
print(0.1 + 0.1 == 0.2)        # True, but...
print(0.1 + 0.1 + 0.1 == 0.3)  # False!
print(0.1 + 0.1 + 0.1)         # prints 0.30000000000000004 (uh oh)
print((0.1 + 0.1 + 0.1) - 0.3) # prints 5.55111512313e-17 (tiny, but non-zero!)
# Equality Testing with math.isclose
print("The problem....")
d1 = 0.1 + 0.1 + 0.1
d2 = 0.3
print(d1 == d2)                # False (never use == with floats!)
print()
print("The solution...")
import math
print(math.isclose(d1, d2))  # True!
# math.isclose checks if the two numbers are ALMOST equal, within a small error
# Short-Circuit Evaluation
def yes():
    return True
def no():
    return False
def crash():
    return 1/0 # crashes!
print(no() and crash()) # Works!
print(crash() and no()) # Crashes!
print (yes() and crash()) # Never runs (due to crash), but would also crash (without short-circuiting)
# Or operator
def yes():
    return True
def no():
    return False
def crash():
    return 1/0 # crashes!
print(yes() or crash()) # Works!
print(crash() or yes()) # Crashes!
print(no() or crash())  # Never runs (due to crash), but would also crash (without short-circuiting)
# more examples
def isPositive(n):
    result = (n > 0)
    print("isPositive(",n,") =", result)
    return result
def isEven(n):
    result = (n % 2 == 0)
    print("isEven(",n,") =", result)
    return result
print("Test 1: isEven(-4) and isPositive(-4))")
print(isEven(-4) and isPositive(-4)) # Calls both functions
print("----------")
print("Test 2: isEven(-3) and isPositive(-3)")
print(isEven(-3) and isPositive(-3)) # Calls only one function!
# type vs isinstance
# Both type and isinstance can be used to type-check
# In general, (isinstance(x, T)) will be more robust than (type(x) == T)
print(type("abc") == str)
print(isinstance("abc", str))
# We'll see better reasons for this when we cover OOP + inheritance later
# in the course.  For now, here is one reason:  say you wanted to check
# if a value is any kind of number (int, float, complex, etc). 
# You could do:
def isNumber(x):
    return ((type(x) == int) or
            (type(x) == float)) # are we sure this is ALL kinds of numbers?
print(isNumber(1), isNumber(1.1), isNumber(1+2j), isNumber("wow"))
# But this is cleaner, and works for all kinds of numbers, including
# complex numbers for example:
import numbers
def isNumber(x):
    return isinstance(x, numbers.Number) # works for any kind of number
print(isNumber(1), isNumber(1.1), isNumber(1+2j), isNumber("wow"))
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "ex3" 的按鈕點按時, 執行 Ex3 物件中的 prog 方法
doc["ex3"].bind('click', Ex3.prog)
</script>
</p>
<p><!-- ***************************** slide ex3 end --></p>
<p><!-- ***************************** slide ex4 start --></p>
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Ex4 = beditor.editor("""# Python 函式
# Vocabulary
x = 5
def f(y, z):
    result = x + y + z
    return result
print(f(1, 2)) # 8
print(f(3, 4)) # 12
# Vocabulary:
#   variables: global vs. local
#   statements vs. expressions
#   function definitions vs. function calls
#   parameters vs. arguments
# Return Statements
# Basic example
def isPositive(x):
    return (x > 0)
print(isPositive(5))  # True
print(isPositive(-5)) # False
print(isPositive(0))  # False
# Return ends the function immediately
def isPositive(x):
    print("Hello!")   # runs
    return (x > 0)
    print("Goodbye!") # does not run ("dead code")
print(isPositive(5))  # prints Hello, then True
# No return statement --> return None
def f(x):
    x + 42
print(f(5)) # None
def f2(x):
    result = x + 42
print(f2(5)) # None
# Print versus Return
# This is a common early mistake (confusing print and return):
def cubed(x):
    print(x**3) # Here is the error!
cubed(2)          # seems to work!
print(cubed(3))   # sort of works (but prints None, which is weird)
print(2*cubed(4)) # Error!
# Once again (correctly)
def cubed2(x):
    return (x**3) # That's better!
cubed2(2)          # seems to be ignored (why?)
print(cubed2(3))   # works!
print(2*cubed2(4)) # works!
# Different Parameter and Return Types
def hypotenuse(a, b):
    return ((a**2) + (b**2))**0.5
print(hypotenuse(3, 4)) # 5.0 (not 5)
print("---------------------")
def xor(b1, b2):
    return ((b1 and (not b2)) or (b2 and (not b1)))  # same as (b1 != b2)
print(xor(True,  True))  # False
print(xor(True,  False)) # True
print(xor(False, True))  # True
print(xor(False, False)) # False
print("---------------------")
def isPositive(n):
    return (n > 0)
print(isPositive(10))     # True
print(isPositive(-1.234)) # False
# Function Composition
def f(w):
    return 10*w
def g(x, y):
    return f(3*x) + y
def h(z):
    return f(g(z, f(z+1)))
print(h(1)) # hint: try the "visualize" feature
# Helper Functions 
def onesDigit(n):
    return n%10
def largerOnesDigit(x, y):
    return max(onesDigit(x), onesDigit(y))
print(largerOnesDigit(134, 672)) # 4
print(largerOnesDigit(132, 674)) # Still 4
# Test Functions
# A broken test function
def onesDigit(n):
    return n%10
def testOnesDigit():
    print("Testing onesDigit()...", end="")
    assert(onesDigit(5) == 5)
    assert(onesDigit(123) == 3)
    assert(onesDigit(100) == 0)
    assert(onesDigit(999) == 9)
    print("Passed!")
testOnesDigit() # Passed!  Why is this bad?
# A better version
def onesDigit2(n):
    return n%10
def testOnesDigit2():
    print("Testing onesDigit()...", end="")
    assert(onesDigit2(5) == 5)
    assert(onesDigit2(123) == 3)
    assert(onesDigit2(100) == 0)
    assert(onesDigit2(999) == 9)
    assert(onesDigit2(-123) == 3) # Added this test
    print("Passed!")
testOnesDigit2() # Crashed!  So the test function worked!
# Local Variable Scope
def f(x):
    print("In f, x =", x)
    x += 5
    return x
def g(x):
    return f(x*2) + f(x*3)
print(g(2))
# Another example
def f(x):
    print("In f, x =", x)
    x += 7
    return round(x / 3)
def g(x):
    x *= 10
    return 2 * f(x)
def h(x):
    x += 3
    return f(x+4) + g(x)
print(h(f(1)))
# Global Variable Scope
# In general, you should avoid using global variables.
# You will even lose style points if you use them!
# Still, you need to understand how they work, since others
# will use them, and there may also be some very few occasions
# where you should use them, too!
g = 100
def f(x):
    return x + g
print(f(5)) # 105
print(f(6)) # 106
print(g)    # 100
# Another exampl
g = 100
def f(x):
    # If we modify a global variable, we must declare it as global.
    # Otherwise, Python will assume it is a local variable.
    global g
    g += 1
    return x + g
print(f(5)) # 106
print(f(6)) # 108
print(g)    # 102
# Default arguments
# Sometimes, a function has a parameter that has a natural default
# We can specify that default value in the function definition,
# then choose whether or not to include it in the function call.
def f(x, y=10):
    return x + y
print(f(5))   # 15
print(f(5,1)) # 6
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "ex4" 的按鈕點按時, 執行 Ex4 物件中的 prog 方法
doc["ex4"].bind('click', Ex4.prog)
</script>
</p>
<p><!-- ***************************** slide ex4 end --></p>
<!-- line drawing start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Draw = beditor.editor("""# Line drawing
# 導入 doc
from browser import document as doc
from browser import html
import math
canvas = html.CANVAS(width = 300, height = 200)
canvas.id = "line_drawing"
brython_div = doc["brython_div"]
brython_div <= canvas
# 準備繪圖畫布
canvas = doc["line_drawing"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
# 設定填圖顏色
ctx.fillStyle = "rgb(200,0,0)"
# 設定畫筆顏色
ctx.strokeStyle = "rgb(0,0,200)"
# 乘上 deg 可轉為徑度單位
deg = math.pi / 180
# 建立多邊形定點位置畫線函式
def star(radius, xc, yc, n):
    #radius = 100
    #xc = 200
    #yc = 200
    xi = xc + radius*math.cos((360/n)*deg+90*deg)
    yi = yc - radius*math.sin((360/n)*deg+90*deg)
    ctx.beginPath()
    ctx.moveTo(xi,yi)
    for i in range(2, n+1):
        x = xc + radius*math.cos((360/n)*deg*i+90*deg)
        y = yc - radius*math.sin((360/n)*deg*i+90*deg)
        ctx.lineTo(x,y)
# 以下利用多邊形畫線函式呼叫執行畫框線或填入顏色
# 畫五邊形框線
star(50, 50, 50, 5)
ctx.closePath()
ctx.stroke()
    
# 填三角形色塊
star(50, 150, 50, 3)
ctx.closePath()
ctx.fill()
    
# 改變畫線顏色後, 畫七邊形框線
ctx.strokeStyle = "rgb(0,200,20)"
star(50, 250, 50, 7)
ctx.closePath()
ctx.stroke()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "draw" 的按鈕點按時, 執行 Draw 物件中的 prog 方法
doc["draw"].bind('click', Draw.prog)
</script>
</p>
<!-- line drawing ends -->
<p></p>
<!-- flag ex start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Flag = beditor.editor("""# 畫中華民國國旗
# 導入 doc
from browser import document as doc
from browser import html
import math
canvas = html.CANVAS(width = 300, height = 200)
canvas.style = {"width": "100%"}
canvas.id = "taiwan_flag"
brython_div = doc["brython_div"]
brython_div <= canvas
# 準備繪圖畫布
canvas = doc["taiwan_flag"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "flag" 的按鈕點按時, 執行 Flag 物件中的 prog 方法
doc["flag"].bind('click', Flag.prog)
</script>
</p>
<!-- flag ex ends -->
<p></p>
<!-- bunny start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Bunny = beditor.editor("""# Ggame
from ggame import App, ImageAsset, Sprite, MouseEvent
from random import random, randint
from browser import document as doc
from browser import html
import math
# 引入既有的id="graphics-column" 標註
graphics_column = doc["graphics-column"]
# 建立內定名稱為 "ggame-canvas" 的 canvas 標註
canvas = html.CANVAS(width = 600, height = 400)
canvas.id = "ggame-canvas"
# 將 canvas 插入 gc 標註中
graphics_column <= canvas
class Bunny(Sprite):
    
    asset = ImageAsset("/images/bunny.png")
    
    def __init__(self, position):
        super().__init__(Bunny.asset, position)
        # register mouse events
        App.listenMouseEvent(MouseEvent.mousedown, self.mousedown)
        App.listenMouseEvent(MouseEvent.mouseup, self.mouseup)
        App.listenMouseEvent(MouseEvent.mousemove, self.mousemove)
        self.dragging = True
        self.deltax = 0
        self.deltay = 0
    
    def step(self):
        # Every now and then a bunny hops...
        if random() < 0.01:
            self.x += randint(-20,20)
            self.y += randint(-20,20)
        
        
    def mousedown(self, event):
        # capture any mouse down within 50 pixels
        self.deltax = event.x - (self.x + self.width//2) 
        self.deltay = event.y - (self.y + self.height//2)
        if abs(self.deltax) < 50 and abs(self.deltay) < 50:
            self.dragging = True
            # only drag one bunny at a time - consume the event
            event.consumed = True
            
    def mousemove(self, event):
        if self.dragging:
            self.x = event.x - self.deltax - self.width//2
            self.y = event.y - self.deltay - self.height//2
            event.consumed = True
            
    def mouseup(self, event):
        if self.dragging:
            self.dragging = False
            event.consumed = True
            
        
class DemoApp(App):
    
    def __init__(self):
        super().__init__()
        for i in range(5):
            Bunny((randint(50, 600), randint(50, 400)))
        
    def step(self):
        # Override step to perform action on each frame update
        for bunny in self.spritelist:
            bunny.step()
# Create the app
app = DemoApp()  
# Run the app
app.run()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "bunny" 的按鈕點按時, 執行 Bunny 物件中的 prog 方法
doc["bunny"].bind('click', Bunny.prog)
</script>
</p>
<!-- bunny ends -->
<p></p>
<!-- clear canvas start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Clear = beditor.editor("""# 清除畫布
from browser import document, html
brython_div = document["brython_div"] 
brython_div.clear()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "clear" 的按鈕點按時, 執行 Clear 物件中的 prog 方法
doc["clear"].bind('click', Clear.prog)
</script>
</p>
<!-- clear canvas ends -->
<p></p>
<!-- cango spur gears start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Spur = beditor.editor("""# Cango Spur Gears
from browser import document as doc
from browser import html
import math
canvas = html.CANVAS(width = 600, height = 400)
canvas.id = "cango_gear"
brython_div = doc["brython_div"]
brython_div <= canvas
from browser import document as doc
from browser import window
import math
canvas = doc["cango_gear"]
# 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx
#ctx = canvas.getContext("2d")
cango = window.Cango.new
# 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換
shapedefs = window.shapeDefs
shape = window.Shape.new
path = window.Path.new
creategeartooth = window.createGearTooth.new
tweener = window.Tweener.new
# 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id="cango_gear" 的 canvas 上
cgo = cango("cango_gear")
######################################
# 畫正齒輪輪廓
#####################################
def cangoGear(n, m, pa):
    # n 為齒數
    #n = 17
    # pa 為壓力角
    #pa = 25
    # m 為模數, 根據畫布的寬度, 計算適合的模數大小
    # Module = mm of pitch diameter per tooth
    #m = 0.8*canvas.width/n
    # pr 為節圓半徑
    pr = n*m/2 # gear Pitch radius
    # generate gear
    data = creategeartooth(m, n, pa)
    # Brython 程式中的 print 會將資料印在 Browser 的 console 區
    #print(data)
    gearTooth = path(data, {
      "fillColor":"#ddd0dd",
      "border": True,
      "strokeColor": "#606060" })
    gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh
    # 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中
    gear = gearTooth.dup()
    # gear 為單一齒的輪廓資料
    #cgo.render(gearTooth)
    # 利用單齒輪廓旋轉, 產生整個正齒輪外形
    for i in range(1, n):
        # 將 gearTooth 中的資料複製到 newTooth
        newTooth = gearTooth.dup()
        # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear
        newTooth.rotate(360*i/n)
        gear.appendPath(newTooth)
    # 建立軸孔
    # add axle hole, hr 為 hole radius
    hr = 0.6*pr # diameter of gear shaft
    shaft = path(shapedefs.circle(hr), {
      "fillColor":"#ddd0dd",
      "border": True,
      "strokeColor": "#606060" })
    gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path
    return gear
# 設定兩齒齒數
n1 = 17
n2 = 11
n3 = 13
reduced_ratio = 0.5
# 使用 80% 的畫布寬度
m = 0.8*canvas.width/((n1+n2+n3)*reduced_ratio)
# 設定共同的壓力角
pa = 25
# n 齒輪的節圓半徑
pr1 = n1*m/2
# n2 齒輪的節圓半徑
pr2 = n2*m/2
pr3 = n3*m/2
cx = canvas.width/2
cy = canvas.height/2
# 建立 gears
gear1 = cangoGear(n1, m, pa)
gear2 = cangoGear(n2, m, pa)
gear3 = cangoGear(n3, m, pa)
from browser.timer import set_interval
deg = math.pi/180
rotate_speed = 12*deg
def draw():
    cgo.clearCanvas()
    gear1.transform.translate(cx-(pr1+pr2)*reduced_ratio, cy)
    gear1.transform.scale(reduced_ratio)
    gear1.transform.rotate(0)
    gear1.rotate(rotate_speed)
    cgo.render(gear1)
    
    gear2.transform.translate(cx, cy)
    gear2.transform.scale(reduced_ratio)
    gear2.transform.rotate(180+(360/n2/2))
    gear2.rotate(-(rotate_speed)*n1/n2)
    cgo.render(gear2)
    
    gear3.transform.translate(cx+(pr2+pr3)*reduced_ratio, cy)
    gear3.transform.scale(reduced_ratio)
    gear3.transform.rotate(180+(360/n3/2)+(180+(360/n2/2))*n2/n3)
    gear3.rotate((rotate_speed*n1/n2)*(n2/n3))
    cgo.render(gear3)
set_interval(draw, 2)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "spur" 的按鈕點按時, 執行 Spur 物件中的 prog 方法
doc["spur"].bind('click', Spur.prog)
</script>
</p>
<!-- cango spur gears ends -->
<p></p>
<!-- temp convert start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Temp = beditor.editor("""# Temperature Conversion
# Temperature Conversion
'''
C to F: Celsius to Fahrenheit Conversion Formula. To convert temperatures in degrees Celsius to Fahrenheit, multiply by 1.8 (or 9/5) and add 32.
To convert temperatures in degrees Fahrenheit to Celsius, subtract 32 and multiply by .5556 (or 5/9).
Fahrenheit = Celsius*9/5 + 32
Celsium = (Fahrenheit - 32)*5/9
'''
from browser import document, html
brython_div = document["brython_div"]
def c2f(c):
    f = round(c*9/5 + 32, 3)
    return "Celsiusc: "+ str(c) +         " degrees = Fahrenheit: " + str(f) + " degrees"
    
def f2c(f):
    c = round((f - 32)*5/9, 3)
    return "Fahrenheit: "+ str(f) +         " degrees = Celsiusc: " + str(c) + " degrees"
    
choice = input("c2f or f2c")
if choice == "c2f":
    '''
    c = float(input("input Celsius in degrees"))
    print(c2f(c))
    '''
    for deg in range(100):
        brython_div <= c2f(deg)
        brython_div <= html.BR()
else:
    '''
    f = float(input("input Fahrenheit in degrees"))
    print(f2c(f))
    '''
    for deg in range(100):
        brython_div <= f2c(deg)
        brython_div <= html.BR()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "temp" 的按鈕點按時, 執行 Temp 物件中的 prog 方法
doc["temp"].bind('click', Temp.prog)
</script>
</p>
<!-- temp convert ends -->
<p></p>
<!-- forloop start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Forloop = beditor.editor("""# For loop
for i in range(5):
    print(i)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "forloop" 的按鈕點按時, 執行 Forloop 物件中的 prog 方法
doc["forloop"].bind('click', Forloop.prog)
</script>
</p>
<!-- forloop ends -->
<p></p>
<!-- guess start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Guess = beditor.editor("""# 猜數字遊戲
from browser import document, html, alert
import random
# 跳出文字說明視窗
alert("開始玩猜數字遊戲")
# 利用 random 模組中的 randint 取 1~100 間的亂數
標準答案 = random.randint(1, 100)
# 利用 input 函式視窗, 取使用者所猜的數字, 轉為整數
你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
# 猜測次數起始值設為 1
猜測次數 = 1
# 進入重複迴圈, 直到猜對數字
while 標準答案 != 你猜的數字:
    # 根據使用者所猜的數字, 與答案比較後, 給出提示
    if 標準答案 < 你猜的數字:
        alert("猜第" + str(猜測次數) + "次, 太大了，再猜 :)加油")
    else:
        alert("猜第" + str(猜測次數) + "次, 太小了，再猜 :)加油")
    你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
    # 猜測次數累加
    猜測次數 += 1
# 跳出迴圈表示猜對, 給出最後文字說明視窗
alert("猜對了！答案為" + str(標準答案) + ", 總共猜了" + str(猜測次數) + "次")
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "guess" 的按鈕點按時, 執行 Guess 物件中的 prog 方法
doc["guess"].bind('click', Guess.prog)
</script>
</p>
<!-- guess ends -->
<p></p>
<!-- autoguess start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Autoguess = beditor.editor("""# 程式自動猜數字遊戲
from browser import document, html, alert
import random
 
id4 = document["brython_div"]
執行次數 = 100
總猜測次數 = 0
for i in range(執行次數):
    id4 <= "第" + str(i+1) + "次玩:" + html.BR()
    下限 = 1
    上限 = 100
    標準答案 = random.randint(下限, 上限)
    pc猜的數字 = random.randint(下限, 上限)
    #print(標準答案, pc猜的數字)
    #integer int()
    #string str()
    #float float()
    #你猜的數字 = int(input("請輸入您所猜的整數:"))
    猜測次數 = 1
    while 標準答案 != pc猜的數字:
        if 標準答案 < pc猜的數字:
            #print("太大了，再猜一次 :)加油")
            # 因此已經確定"pc猜的數字"不是答案, 因此 - 1
            id4 <= "電腦猜的數字:" + str(pc猜的數字) + " 太大了!" + html.BR()
            上限 = pc猜的數字 - 1
        else:
            #print("太小了，再猜一次 :)加油")
            # 因此已經確定"pc猜的數字"不是答案, 因此 + 1
            id4 <= "電腦猜的數字:" + str(pc猜的數字) + " 太小了!" + html.BR()
            下限 = pc猜的數字 + 1
        #pc猜的數字 = int(input("請輸入您所猜的整數:"))
        pc猜的數字 = random.randint(下限, 上限)
        猜測次數 += 1
    #print("猜對了！總共猜了", 猜測次數, "次")
    id4 <= "電腦猜對了, 答案為: " + str(標準答案) + ", 總共猜了 "+ str(猜測次數) + "次" + html.BR()
    總猜測次數 += 猜測次數
平均猜測次數 = int(總猜測次數/執行次數)
#print("平均次數", 平均猜測次數)
id4 <= "平均次數: " + str(平均猜測次數)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "autoguess" 的按鈕點按時, 執行 Autoguess 物件中的 prog 方法
doc["autoguess"].bind('click', Autoguess.prog)
</script>
</p>
<!-- autoguess ends -->
<p></p>
<!-- lottery start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Lottery = beditor.editor("""# 大樂透電腦選號
# lottery
from browser import document, html, alert
import random
try:
    total = int(input("請問要出幾張大樂透彩卷號碼?"))
except:
    alert("請輸入要選擇大樂透電腦選號數量的'整數'")
    total = int(input("請問要出幾張大樂透彩卷號碼?"))
# 準備將電腦選出的號碼, 輸出到內定 id="brython_div" 的標註區域
output_div = document["brython_div"]
output_div <= "以下將出 " + str(total) + " 張電腦選號彩卷:" + html.BR()
for i in range(1, total + 1):
    # 利用 list(range()) 產生 1 到 49 的 population list
    # 然後再透過 random.sample(population, k) 
    # 從 population, 產生 k 個不同的數字
    numbers = random.sample(list(range(1, 49)), 6)
    output_div <= str(i) + ". 電腦選號為: " + str(numbers) + html.BR()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "lottery" 的按鈕點按時, 執行 Lottery 物件中的 prog 方法
doc["lottery"].bind('click', Lottery.prog)
</script>
</p>
<!-- lottery ends -->
<p></p>
<!-- 台灣威力彩 start -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Weleadlottery = beditor.editor("""# 威力彩電腦選號
# weleadlottery
from browser import document, html, alert
import random
try:
    total = int(input("請問要出幾張威力彩卷號碼?"))
except:
    alert("請輸入要選擇威力彩電腦選號數量的'整數'")
    total = int(input("請問要出幾張威力彩卷號碼?"))
# 準備將電腦選出的號碼, 輸出到內定 id="brython_div" 的標註區域
output_div = document["brython_div"]
output_div <= "以下將出 " + str(total) + " 張威力彩電腦選號彩卷:" + html.BR()
for i in range(1, total + 1):
    # 利用 list(range()) 產生第一區 1 到 38 , 第二區 1 到 8 的 population list
    # 然後再透過 random.sample(population, k) 
    # 從 population, 產生 k 個不同的數字
    section1_numbers = random.sample(list(range(1, 38)), 6)
    section2_number = random.sample(list(range(1, 8)), 1)
    output_div <= str(i) + ". 電腦選號第一區為: " + str(section1_numbers) + html.BR()
    output_div <= ". 電腦選號第二區為: " + str(section2_number) + html.BR()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "lottery" 的按鈕點按時, 執行 Lottery 物件中的 prog 方法
doc["weleadlottery"].bind('click', Weleadlottery.prog)
</script>
</p>
<!-- 台灣威力彩 ends -->
<p></p>
<!-- bezier starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Bezier = beditor.editor("""# Cango Bezier 繪圖
from browser import window, html
from browser import document as doc
canvas = html.CANVAS(width = 600, height = 400)
canvas.id = "canvas"
brython_div = doc["brython_div"]
brython_div <= canvas
# Javascript 物件
cango = window.Cango.new
path = window.Path.new
shape = window.Shape.new
group = window.Group.new
# Javascript 變數
shapedefs = window.shapeDefs
g1 = cango("canvas")
g1.clearCanvas()
g1.gridboxPadding(10, 10, 5, 7)
g1.fillGridbox("lightgreen")
g1.setWorldCoordsRHC(-100, -100, 400)
x1 = 40
y1 = 20
cx1 = 90
cy1 = 120
x2 = 120
y2 = 100
cx2 = 130
cy2 = 20
cx3 = 150
cy3 = 120
x3 = 180
y3 = 60
def dragC1(mousePos):
    global cx1, cy1
    cx1 = mousePos.x
    cy1 = mousePos.y
    drawCurve()
def dragC2(mousePos):
    global cx2, cy2
    cx2 = mousePos.x
    cy2 = mousePos.y
    drawCurve()
def dragC3(mousePos):
    global cx3, cy3
    cx3 = mousePos.x
    cy3 = mousePos.y
    drawCurve()
def drawCurve():
    qbez = path(['M', x1, y1, 'Q', cx1, cy1, x2, y2], {
      'strokeColor':'blue'})
    cbez = path(['M', x2, y2, 'C', cx2, cy2, cx3, cy3, x3, y3], {
      'strokeColor':'green'})
    L1 = path(['M', x1, y1, 'L', cx1, cy1, x2, y2], {
      'strokeColor':"rgba(0, 0, 0, 0.2)",
      'dashed':[4]})
    L2 = path(['M', x2, y2, 'L', cx2, cy2], {
      'strokeColor':"rgba(0, 0, 0, 0.2)",
      'dashed':[4]})
    L3 = path(['M', x3, y3, 'L', cx3, cy3], {
      'strokeColor':"rgba(0, 0, 0, 0.2)",
      'dashed':[4]})
    c1.transform.translate(cx1, cy1)
    c2.transform.translate(cx2, cy2)
    c3.transform.translate(cx3, cy3)
    grp = group(qbez, cbez, L1, L2, L3, c1, c2, c3)
    g1.render(grp, True)
g1.clearCanvas("lightyellow")
g1.deleteAllLayers()
g1.setWorldCoordsRHC(0, 0, 200)
c1 = shape(shapedefs.circle(6), {'fillColor':'red'})
c1.enableDrag(None, dragC1, None)
c2 = shape(shapedefs.circle(6), {'fillColor':'red'})
c2.enableDrag(None, dragC2, None)
c3 = shape(shapedefs.circle(6), {'fillColor':'red'})
c3.enableDrag(None, dragC3, None);
drawCurve()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "bezier" 的按鈕點按時, 執行 Bezier 物件中的 prog 方法
doc["bezier"].bind('click', Bezier.prog)
</script>
</p>
<!-- bezier ends -->
<p></p>
<!-- turtle1 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle1 = beditor.editor("""# Turtle1 繪圖
from browser import window, html
from browser import document as doc
import turtle
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
t = turtle.Turtle()
t.width(5)
for c in ['red', '#00ff00', '#fa0', 'rgb(0,0,200)']:
    t.color(c)
    t.forward(100)
    t.left(90)
# dot() and write() do not require the pen to be down
t.penup()
t.goto(-30, -100)
t.dot(40, 'rgba(255, 0, 0, 0.5')
t.goto(30, -100)
t.dot(40, 'rgba(0, 255, 0, 0.5')
t.goto(0, -70)
t.dot(40, 'rgba(0, 0, 255, 0.5')
t.goto(0, 125)
t.color('purple')
t.write("這就是 Brython, 網頁上的 Python", font=("Arial", 15, "normal"))
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle1" 的按鈕點按時, 執行 Turtle1 物件中的 prog 方法
doc["turtle1"].bind('click', Turtle1.prog)
</script>
</p>
<!-- turtle1 ends -->
<p></p>
<!-- turtle2 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle2 = beditor.editor("""# Turtle2 繪圖
from browser import document as doc
import turtle
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
star = turtle.Turtle()
for i in range(5):
    star.forward(250)
    star.right(144)
    
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle2" 的按鈕點按時, 執行 Turtle2 物件中的 prog 方法
doc["turtle2"].bind('click', Turtle2.prog)
</script>
</p>
<!-- turtle2 ends -->
<p></p>
<!-- turtle3 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle3 = beditor.editor("""# Turtle3 繪圖
# https://michael0x2a.com/blog/turtle-examples
from browser import document as doc
import turtle
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
painter = turtle.Turtle()
painter.pencolor("blue")
for i in range(50):
    painter.forward(50)
    painter.left(123) # Let's go counterclockwise this time 
    
painter.pencolor("red")
for i in range(50):
    painter.forward(100)
    painter.left(123)
    
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle3" 的按鈕點按時, 執行 Turtle3 物件中的 prog 方法
doc["turtle3"].bind('click', Turtle3.prog)
</script>
</p>
<!-- turtle3 ends -->
<p></p>
<!-- turtle4 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle4 = beditor.editor("""# Turtle4 繪圖
# https://docs.python.org/3.7/library/turtle.html?highlight=turtle
# https://fiftyexamples.readthedocs.io/en/latest/turtle.html
from browser import document as doc
import turtle
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
# 輸入 "turtle" 字串, 表示要使用內建的烏龜圖示
t = turtle.Turtle("turtle")
# 設定繪圖尺寸
screen_x = 500-20
screen_y = 300
# 提筆, 將烏龜移動到畫布中心
t.penup()
t.home()
# 內定方向為右, 前進 screen_x/2
t.forward(screen_x / 2)
# 將方向往右轉 90 度
t.right(90)
# 此時方向向下, 前進 screen_y/2
t.forward(screen_y / 2)
# 令烏龜方向轉絕對角度 180, 等同轉相對角度 90 度, 即 t.right(90)
t.setheading(180)
# 將畫筆顏色設為紅色
t.pencolor('red')
# 下筆準備繪圖
t.pendown()
# 設筆寬度為 10
t.pensize(10)
# 進入重複迴圈, 此時方向向右, 分別
# 前進 screen_x, 之後轉 90 度, 方向朝上
# 再前進 screen_y, 之後再轉 90 度, 方向朝右
# 再前進 screen_x, 之後轉 90 度, 方向朝下
# 最後再前進 screen_y 後, 將方向轉為向左
for distance in (screen_x, screen_y, screen_x, screen_y):
    t.forward(distance)
    t.right(90)
# 提筆後, 將烏龜轉回內定方向回到畫布中心
t.penup()
t.home()
# 完成 turtle 繪圖
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle4" 的按鈕點按時, 執行 Turtle4 物件中的 prog 方法
doc["turtle4"].bind('click', Turtle4.prog)
</script>
</p>
<!-- turtle4 ends -->
<p></p>
<!-- turtle5 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle5 = beditor.editor("""# Turtle5 繪圖
# https://brython.info/gallery/turtle.html
from browser import document as doc
import turtle
import math
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
t = turtle.Turtle("turtle")
t.speed(1)
t.forward(50)
print("Should be (50, 0):", t.position())
print("Should be 50: ", t.xcor())
print("Should be 0: ", t.ycor())
t.left(90)
t.color("blue")
t.speed(2)
t.fd(50)
print("Should be (50, 50):", t.pos())
print("Should be 225: ", t.towards(0, 0))
print("Should be 90: ", t.heading())
print("Should be approximately 71:", t.distance(0, 0))
# Draw the same square in three different angle modes
t.width(4)
print("Drawing using degrees - the default")
print("Heading should be 90: ", t.heading())
for i in range(4):
    t.forward(100)
    t.left(90)
print("Drawing using radians")
t.radians()
print("Heading should be pi/2: ", t.heading())
for i in range(4):
    t.forward(100)
    t.left(math.pi/2)
print("Drawing using gradients")
t.degrees(400)
print("Heading should be 100: ", t.heading())
for i in range(4):
    t.forward(100)
    t.left(100)
t.degrees()
t.width(1)
t.lt(90)
t.color("orange")
t.backward(50)
t.right(90)
t.color("green")
t.back(50)
t.rt(90)
t.color("red")
t.bk(50)
t.stamp()
t.speed(4)
t.color("black", "white")
t.goto(-100, 100)
t.stamp()
t.color("blue", "yellow")
t.setposition(0, 100)
t.stamp()
t.color("green", "white")
t.setpos(100, 100)
t.stamp()
t.speed(10)
t.color("orange")
t.sety(-100)
t.setx(-100)
t.stamp()
t.color("cyan")
t.home()
t.stamp()
t.color("green")
t.width(4)
t.setheading(180)
t.forward(150)
t.seth(90)
t.fd(20)
t.dot(30, "rgba(255, 0, 0, 0.2)")
t.color("red")
t.speed(0)
t.forward(30)
t.left(90)
t.circle(30)
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle5" 的按鈕點按時, 執行 Turtle5 物件中的 prog 方法
doc["turtle5"].bind('click', Turtle5.prog)
</script>
</p>
<!-- turtle5 ends -->
<p></p>
<!-- turtle6 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle6 = beditor.editor("""# Turtle6 繪圖
from browser import document as doc
import turtle
import math
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
t = turtle.Turtle("turtle")
t.speed(10)
colors = ['red', 'purple', 'blue', 'green', 'orange']
for x in range(150):
    t.pencolor(colors[x % 5])
    t.width(x/10 + 1)
    t.forward(x)
    t.left(59)
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle6" 的按鈕點按時, 執行 Turtle6 物件中的 prog 方法
doc["turtle6"].bind('click', Turtle6.prog)
</script>
</p>
<!-- turtle6 ends -->
<p></p>
<!-- turtle7 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle7 = beditor.editor("""# Turtle7 繪圖
from browser import document as doc
import turtle
import math
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
screen=turtle.Screen()    #making a canvas for drawing
screen.bgcolor('black')    #making canvas black
trtl=turtle.Turtle()  #making a turtle
trtl.pencolor('red')    #making colour of the pen red
trtl.pensize(5)    #choosing the size of pen nib 
trtl.speed(10)    #choosing the speed of drawing
# shape should be ‘arrow’, ‘classic’, ‘turtle’ or ‘circle’
trtl.shape('turtle')   #choosing the shape of pen nib
trtl.forward(150)    #drawing a line of 150 pixels
trtl.right(90)    #asking turtle to turn 90 degrees
trtl.forward(150)    #drawing a line of 150 pixels
trtl.penup()    # preparing for moving pen without drawing
trtl.setpos(-140,-120)    # making the new position of the turtle
trtl.pendown()   # bringing the pen down for drawing again
trtl.pencolor('green')    # choosin the pen colour as green
trtl.write('Brython 烏龜繪圖', font=("Arial", 20, "bold"))    # chosing the font
trtl.penup()
trtl.ht()    # hiding the turtle from the screen
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle7" 的按鈕點按時, 執行 Turtle7 物件中的 prog 方法
doc["turtle7"].bind('click', Turtle7.prog)
</script>
</p>
<!-- turtle7 ends -->
<p></p>
<!-- turtle8 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Turtle8 = beditor.editor("""# Turtle8 繪圖
from browser import document as doc
import turtle
import math
turtle.set_defaults(
    turtle_canvas_wrapper = doc['brython_div']
)
wn = turtle.Screen() 
wn.bgcolor("black") 
skk = turtle.Turtle() 
skk.speed(10)
skk.shape("circle")
skk.color("blue") 
  
def sqrfunc(size): 
    for i in range(4): 
        skk.fd(size) 
        skk.left(90) 
        size = size-5
  
sqrfunc(146) 
sqrfunc(126) 
sqrfunc(106) 
sqrfunc(86) 
sqrfunc(66) 
sqrfunc(46) 
sqrfunc(26) 
turtle.done()
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "turtle8" 的按鈕點按時, 執行 Turtle8 物件中的 prog 方法
doc["turtle8"].bind('click', Turtle8.prog)
</script>
</p>
<!-- turtle8 ends -->
<p></p>
<!-- konva1 starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Konva1 = beditor.editor("""# Konva1 繪圖
# 引用 https://konvajs.github.io/ 繪圖
from browser import document, html, window
width = 600
height = 400
konva = window.Konva
# Konva 必須在 canvas 繪圖, 從上方設定,  canvas id 為 "container"
stage = konva.Stage.new({
        "container": 'brython_div',
        "width": width,
        "height": height
    })
layer = konva.Layer.new()
rectX = stage.getWidth() / 2 - 50
rectY = stage.getHeight() / 2 - 25
box = konva.Rect.new({
        "x": rectX,
        "y": rectY,
        "width": 100,
        "height": 50,
        "fill": '#00D2FF',
        "stroke": 'black',
        "strokeWidth": 4,
        "draggable": True
    })
def f1():
    document.body.style.cursor = 'pointer'
    
def f2():
    document.body.style.cursor = 'default'
# add cursor styling
box.on('mouseover', f1())
box.on('mouseout', f2())
layer.add(box)
stage.add(layer)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "konva1" 的按鈕點按時, 執行 Konva1 物件中的 prog 方法
doc["konva1"].bind('click', Konva1.prog)
</script>
</p>
<!-- konva1 ends -->
<p></p>
<!-- ycqsort starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Ycqsort = beditor.editor("""# Ycombinator quicksort example
Y = lambda f: lambda *args: f(Y(f))(*args)
quicksort = Y(lambda f:
    lambda x: (
        f([item for item in x if item < x[0]])
        + [y for y in x if x[0] == y]
        + f([item for item in x if item > x[0]])
    ) if x else [])
    
print(quicksort([1, 3, 5, 4, 1, 3, 2]))
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "ycqsort" 的按鈕點按時, 執行 Ycqsort 物件中的 prog 方法
doc["ycqsort"].bind('click', Ycqsort.prog)
</script>
</p>
<!-- ycqsort ends -->
<p></p>
<!-- ball starts -->
<p>
<script type="text/python3">
from browser import document as doc
import beditor
Ball = beditor.editor("""# Ggame ball example
from ggame import (
    App, 
    Color, 
    LineStyle, 
    Sprite, 
    RectangleAsset, 
    ImageAsset,
    CircleAsset, 
    EllipseAsset, 
    PolygonAsset,
)
from browser import document as doc
from browser import html
# 引入既有的id="graphics-column" 標註
graphics_column = doc["graphics-column"]
# 建立內定名稱為 "ggame-canvas" 的 canvas 標註
canvas = html.CANVAS(width = 600, height = 100)
canvas.id = "ggame-canvas"
# 將 canvas 插入 gc 標註中
graphics_column <= canvas
# reverse - change the ball direction
def reverse(b):
    b.direction *= -1
# Set up function for handling screen refresh
def step():
    if ball.go:
        ball.x += ball.direction
        if ball.x + ball.width > myapp.width or ball.x < 0:
            ball.x -= ball.direction
            reverse(ball)
myapp = App()
# Three primary colors with no transparency (alpha = 1.0)
red = Color(0xff0000, 1.0)
green = Color(0x00ff00, 1.0)
blue = Color(0x0000ff, 1.0)
black = Color(0x000000, 1.0)
# define colors and line style
green = Color(0x00ff00, 1)
black = Color(0, 1)
noline = LineStyle(0, black)
# a rectangle asset and sprite to use as background
bg_asset = RectangleAsset(canvas.width, canvas.height, noline, green)
bg = Sprite(bg_asset, (0,0))
ball_asset = ImageAsset("/images/orb-150545_640.png")
ball = Sprite(ball_asset, (0, 0))
# Original image is too big. Scale it to 1/10 its original size
ball.scale = 0.1
# custom attributes
ball.direction = 7
ball.go = True
myapp.run(step)
""", "kw_editor", "kw_console", "kw__container", "kw_py_src")
# id 為 "ball" 的按鈕點按時, 執行 Ball 物件中的 prog 方法
doc["ball"].bind('click', Ball.prog)
</script>
</p>
<!-- ball ends -->
<p><button id="keyword">Keyword</button><button id="ex1">Ex1</button><button id="ex2">Ex2</button><button id="ex3">Ex3</button><button id="ex4">Ex4</button><button id="forloop">Ex5</button><button id="guess">Guess</button><button id="autoguess">Autoguess</button><button id="lottery">大樂透</button><button id="weleadlottery">威力彩</button><button id="temp">Temp</button><button id="draw">Draw</button><button id="flag">Flag</button><button id="bezier">Bezier</button><button id="turtle1">Turtle1</button><button id="turtle2">Turtle2</button><button id="turtle3">Turtle3</button><button id="turtle4">Turtle4</button><button id="turtle5">Turtle5</button><button id="turtle6">Turtle6</button><button id="turtle7">Turtle7</button><button id="turtle8">Turtle8</button><button id="konva1">Konva1</button><button id="bunny">Bunny</button><button id="ball">Ball</button><button id="spur">Spur</button><button id="ycqsort">Ycqsort</button><button id="clear">Clear</button></p>
<h4>參考資料:</h4>
<p><a href="/downloads/turtle_intro.pdf">turtle_intro.pdf</a></p>
<p><a href="/downloads/turtle_intro2.pdf">turtle_intro2.pdf</a></p>
<p>其他擷取程式的方式: <a href="http://mde.tw/2017springvcp/blog/web-based-python.html">http://mde.tw/2017springvcp/blog/web-based-python.html</a></p>
<h4>Qt for Python</h4>
<p><a href="https://www.qt.io/qt-for-python">https://www.qt.io/qt-for-python</a></p>
<p><a href="https://build-system.fman.io/python-qt-tutorial">https://build-system.fman.io/python-qt-tutorial</a></p>
<p><a href="https://build-system.fman.io/pyqt-exe-creation/">https://build-system.fman.io/pyqt-exe-creation/</a></p>
<p><a href="https://github.com/mherrmann/fbs-tutorial">https://github.com/mherrmann/fbs-tutorial</a></p>
<p><a href="https://www.ics.com/blog/we-ported-qt-app-c-python-heres-what-happened">https://www.ics.com/blog/we-ported-qt-app-c-python-heres-what-happened</a></p>
<h4>QML 與 Flutter</h4>
<p><a href="https://paulhammant.com/2016/11/15/qmls-squandered-opportunity/">https://paulhammant.com/2016/11/15/qmls-squandered-opportunity/</a> 中所提到 QML 的弱點在於將 .qml 與 .c++ 或 .py  分開的問題, Google 總算在 Flutter 適度解決了此一瓶頸.</p>
<p>但是 QML 加上 Qt for Python 仍不失為一個好了 Desktop GUI 開發框架.</p>
<p>
<script src="/static/konva.min.js"></script>
</p>
<div id="container"></div>
<p>
<script>
var width = window.innerWidth;
    var height = window.innerHeight;
    // globals
    var curveLayer, lineLayer, anchorLayer, quad, bezier;
    function updateDottedLines() {
        var q = quad;
        var b = bezier;
        var quadLine = lineLayer.get('#quadLine')[0];
        var bezierLine = lineLayer.get('#bezierLine')[0];
        quadLine.setPoints([q.start.attrs.x, q.start.attrs.y, q.control.attrs.x, q.control.attrs.y, q.end.attrs.x, q.end.attrs.y]);
        bezierLine.setPoints([b.start.attrs.x, b.start.attrs.y, b.control1.attrs.x, b.control1.attrs.y, b.control2.attrs.x, b.control2.attrs.y, b.end.attrs.x, b.end.attrs.y]);
        lineLayer.draw();
    }
    function buildAnchor(x, y) {
        var anchor = new Konva.Circle({
            x: x,
            y: y,
            radius: 20,
            stroke: '#666',
            fill: '#ddd',
            strokeWidth: 2,
            draggable: true
        });
        // add hover styling
        anchor.on('mouseover', function() {
            document.body.style.cursor = 'pointer';
            this.setStrokeWidth(4);
            anchorLayer.draw();
        });
        anchor.on('mouseout', function() {
            document.body.style.cursor = 'default';
            this.setStrokeWidth(2);
            anchorLayer.draw();
        });
        anchor.on('dragend', function() {
            drawCurves();
            updateDottedLines();
        });
        anchorLayer.add(anchor);
        return anchor;
    }
    function drawCurves() {
        var context = curveLayer.getContext();
        context.clear();
        // draw quad
        context.beginPath();
        context.moveTo(quad.start.attrs.x, quad.start.attrs.y);
        context.quadraticCurveTo(quad.control.attrs.x, quad.control.attrs.y, quad.end.attrs.x, quad.end.attrs.y);
        context.setAttr('strokeStyle', 'red');
        context.setAttr('lineWidth', 4);
        context.stroke();
        // draw bezier
        context.beginPath();
        context.moveTo(bezier.start.attrs.x, bezier.start.attrs.y);
        context.bezierCurveTo(bezier.control1.attrs.x, bezier.control1.attrs.y, bezier.control2.attrs.x, bezier.control2.attrs.y, bezier.end.attrs.x, bezier.end.attrs.y);
        context.setAttr('strokeStyle', 'blue');
        context.setAttr('lineWidth', 4);
        context.stroke();
    }
    var stage = new Konva.Stage({
        container: 'container',
        width: width,
        height: height
    });
    anchorLayer = new Konva.Layer();
    lineLayer = new Konva.Layer();
    // curveLayer just contains a canvas which is drawn
    // onto with the existing canvas API
    curveLayer = new Konva.Layer();
    var quadLine = new Konva.Line({
        dash: [10, 10, 0, 10],
        strokeWidth: 3,
        stroke: 'black',
        lineCap: 'round',
        id: 'quadLine',
        opacity: 0.3,
        points: [0, 0]
    });
    var bezierLine = new Konva.Line({
        dash: [10, 10, 0, 10],
        strokeWidth: 3,
        stroke: 'black',
        lineCap: 'round',
        id: 'bezierLine',
        opacity: 0.3,
        points: [0, 0]
    });
    // add dotted line connectors
    lineLayer.add(quadLine);
    lineLayer.add(bezierLine);
    quad = {
        start: buildAnchor(60, 30),
        control: buildAnchor(240, 110),
        end: buildAnchor(80, 160)
    };
    bezier = {
        start: buildAnchor(280, 20),
        control1: buildAnchor(530, 40),
        control2: buildAnchor(480, 150),
        end: buildAnchor(300, 150)
    };
    // keep curves insync with the lines
    anchorLayer.on('beforeDraw', function() {
        drawCurves();
        updateDottedLines();
    });
    stage.add(curveLayer);
    stage.add(lineLayer);
    stage.add(anchorLayer);
    drawCurves();
    updateDottedLines();
</script>
</p><h3>Javascript</h3>
<h4>研究主題：</h4>
<p style="padding-left: 30px;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures">Closures</a></p>
<p style="padding-left: 30px;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import">Import</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/getify/You-Dont-Know-JS">https://github.com/getify/You-Dont-Know-JS</a></p>
<p style="padding-left: 30px;"><a href="https://www.seas.upenn.edu/~cis197/">https://www.seas.upenn.edu/~cis197/</a></p>
<p style="padding-left: 30px;"><a href="https://javascript.info/">https://javascript.info/</a></p>
<p style="padding-left: 30px;"><a href="https://anvil.works/blog/python-in-the-browser-talk">https://anvil.works/blog/python-in-the-browser-talk</a> (esp. pypy.js)</p>
<p>一般建議是將 Javascript 放在 &lt;/body&gt; 標註之前, 也就是所有頁面內容的最後面, 因為這樣會讓瀏覽用戶先看到整個頁面內容之後, 再下載執行頁面所需的 Javascript, 如此, 使用者會"感覺"頁面的資料擷取順暢, 不會頁面載入到中途, 因下載或執行 Javascript 程式碼而停頓.</p>
<p>Beginning JavaScript (2019)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-4395-4">https://link.springer.com/book/10.1007/978-1-4842-4395-4</a></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">for (var i=0; i&lt;10; i++)
    // 將原本列在 console 區的資料導引到下列程式執行輸出區
    console.log(i + ": Hello, 開始學習 Javascript!");</pre>
<p>下列範例,  以 <a href="https://www.arc.id.au/CanvasGraphics.html">https://www.arc.id.au/CanvasGraphics.html</a> 繪圖程式庫中的程式碼為例.</p>
<script src="/downloads/dart_ex/cango/Cango-15v00-min.js"></script>
<script src="/downloads/dart_ex/cango/CangoAxes-6v01-min.js"></script>
<script src="/downloads/dart_ex/cango/Cango3D-8v00-min.js"></script>
<script src="/downloads/dart_ex/cango/gearUtils-09.js"></script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<!--
<script type="text/javascript" src="/static/ace/mode-python3.js"></script>
<script type="text/javascript" src="/static/ace/snippets/python.js"></script>
--></p>
<!-- 嘗試直接使用 ace.js 編寫 Javascript -->
<div id="js_editor" style="width: 600px; height: 300px;"></div>
<p>
<script>
editor = window.ace.edit("js_editor");
session = editor.getSession();
//session.setMode("ace/mode/javascript");
editor.setOptions({
// Javascript 中的 true 與 false 為小寫開頭
             enableLiveAutocompletion: true,
             enableSnippets: true,
             highlightActiveLine: false,
             highlightSelectedWord: true,
             autoScrollEditorIntoView: true,
             // 'maxLines': session.getLength() 可以根據程式長度設定 editor 列數
             // 設定讓使用者最多可以在畫面中顯示 20 行程式碼
             maxLines: 20,
             fontSize: '12pt'
            });
if (localStorage["js_src"] != null){
    editor.setValue(localStorage["js_src"]);
}else{
    editor.setValue(`
  var g = new Cango('canvas'),
      i, data = [];

  g.gridboxPadding(10);
  g.setWorldCoordsRHC(0, -50, 2*Math.PI, 100);
  // draw axes
  g.drawAxes(0, 6.5, -50, 50, {
    xOrigin:0, yOrigin:0,
    fontSize:10,
    strokeColor:'gray'});

  for (i=0; i<=2*Math.PI; i+=0.03) {
    data.push(i, 50*Math.sin(i));
  }
  g.drawPath(data, {strokeColor:'red'});
  console.log("繪圖完成");
`);
}
editor.scrollToRow(0);
editor.gotoLine(0);

function runjs(){
    code = editor.getValue();
    localStorage['js_src'] = code;
    // 在目前頁面中執行 code
    // grabbed from https://stackoverflow.com/questions/6432984/adding-script-element-to-the-dom-and-have-the-javascript-run
    var script = document.createElement('script');
    try {
      script.appendChild(document.createTextNode(code));
      document.body.appendChild(script);
    } catch (e) {
      script.text = code;
      document.body.appendChild(script);
    }
}

// 用於清除 console 輸出區
function clearBox(elementID)
{
    document.getElementById(elementID).innerHTML = "";
}

// 設定擴大 console 區
function showConsole()
{
    document.getElementById("js_console").cols = 60;
    document.getElementById("js_console").rows = 10;
}

// 清除 canvas
function clearCanvas(canvasID)
{
    var canvas = document.getElementById(canvasID);
    const context = canvas.getContext('2d');
    context.clearRect(0, 0, canvas.width, canvas.height);
}

// redirect console.log to page id="js_console" area
// https://stackoverflow.com/questions/11403107/capturing-javascript-console-log
(function(){
    var oldLog = console.log;
    console.log = function (message) {
        document.getElementById("js_console").innerHTML+= message + "\n";
        oldLog.apply(console, arguments);
    };
})();

// get gist data with id
function getGist(gistid, filename)
{
    $.ajax({
      url: 'https://api.github.com/gists/'+gistid,
      type: 'GET',
      dataType: 'jsonp'
    }).success( function(gistdata) {
        var content = gistdata.data.files[filename].content;
            editor.setValue(content);
      }).error( function(e) {
      // ajax error
      console.log("ajax error");
});
}
</script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["js_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".js");
}
</script>
</p>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="js_filename" placeholder="input file name" type="text"/>.js</label> <input onclick="doSave('js_src', 'js_filename');" type="submit" value="Save"/></form>
<p><button onclick="runjs()">Run</button><button onclick="showConsole()">Output</button><button onclick="clearBox('js_console')">清除輸出區</button><button onclick="clearCanvas('canvas')">清除繪圖區</button><button onclick="clearBox('html')">清除 html 區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="js_console"></textarea></div>
<p><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'ROCFlag.js')">ROC Flag</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'plotSin.js')">Plot Sin</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'plotCos.js')">Plot Cos</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'excavator.js')">Excavator</button> <button onclick="getGist('e267db237e4ec2c38d208529503b1bbf', 'ajax_get_stud_data.js')">Read Stud List</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'bouncingBall.js')">Bouncing Ball</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'editCurve.js')">Edit Curve</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'groupDrag.js')">Group Drag</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'involuteGear1.js')">Involute Gear</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'gearMeshing.js')">Gear Meshing</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'internalGear.js')">Internal Gear</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'threejs_cube.js')">Three.js Cube</button><button onclick="getGist('d2f8b8898ff1a17a078374ee8dc714c4', 'canvas_drawLine.js')">Canvas Draw Line</button><button onclick="getGist('48a95c8c132fd62e257fa60b25569851', 'pypy_ex1.js')">Pypy.js ex1</button></p>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/109/three.js">
</script>
<div id="html"></div>
<p><canvas height="400" id="canvas" width="600"></canvas></p>
<script src="https://pypyjs.org/pypyjs-release/lib/Promise.min.js"></script>
<script src="https://pypyjs.org/pypyjs-release/lib/FunctionPromise.js"></script>
<script src="https://pypyjs.org/pypyjs-release/lib/pypyjs.js"></script><h3>JQuery</h3>
<p>JQuery 起源於 <a href="https://johnresig.com/blog/selectors-in-javascript/">https://johnresig.com/blog/selectors-in-javascript/,</a> 展示透過 CSS Selector 可以與 Javascript 的元件互動.</p>
<p>CSS</p>
<p>Document Object Model (DOM)</p>
<p>Javascript elements</p><h3>Html</h3>
<h3>Canvas</h3>
<h3>Dart</h3>
<p><a href="https://www.tutorialspoint.com/dart_programming/index.htm">https://www.tutorialspoint.com/dart_programming/index.htm</a> </p>
<p><a href="https://blog.usejournal.com/beginning-programming-with-dart-beginners-3f0348d8baf8">https://blog.usejournal.com/beginning-programming-with-dart-beginners-3f0348d8baf8</a></p>
<p>下列影片說明如何利用 Javascript 建立按鈕, 讓 <a href="https://dartpad.github.io">https://dartpad.github.io</a> 可以直接帶出存放在 <a href="https://github.com/mdecourse/cp2019/tree/master/downloads/dart_ex">downloads</a> 目錄中的 Dart 程式範例. 所引用的程式包含<a href="https://github.com/dartpad/dartpad.github.io/blob/master/embed-dart.html">純 Dart 程式碼</a>, 包含 html 與 css 的<a href="https://github.com/dartpad/dartpad.github.io/blob/master/embed-html.html">網際程式碼</a>, 以及 <a href="https://github.com/dartpad/dartpad.github.io/blob/master/embed-flutter.html">flutter 程式碼</a>等三種.</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/hoEUb5NIgrU" width="560"></iframe></p>
<!-- 透過 getDart(dirname) 取位於 downloads/dart_ex/ 目錄中 dirname 目錄中的 Dart 程式碼 -->
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=mdecourse&gh_repo=lab&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}

function getHtmlDart(dirname){
    source = "https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&gh_repo=lab&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function getFlutter(dirname){
    source = "https://dartpad.github.io/embed-flutter.html?gh_owner=mdecourse&gh_repo=lab&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}

function original(){
document.getElementById("iframe").width = 800 ;
document.getElementById("iframe").height = 600 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<h4>純 Dart 程式</h4>
<p><button onclick="getDart('hello')">Hello</button> <button onclick="getDart('for')">For Loop</button> <button onclick="getDart('sum')">Sum</button> <button onclick="getDart('runge_kutta')">Runge-Kutta</button> <button onclick="getDart('rk_ex1')">RK ex1</button> <button onclick="getDart('mass_spring_damping')">Mass Spring Damping</button> <button onclick="getDart('function')">Function</button> <button onclick="getDart('fun_parameter')">Function Parameter</button> <button onclick="getDart('fat_arrow')">Fat Arrow</button> <button onclick="getDart('temp1')">Temp 1</button></p>
<h4>Html 程式</h4>
<p><button onclick="getHtmlDart('random_grouping')">亂數分組</button> <button onclick="getHtmlDart('roc_flag')">ROC Flag</button> <button onclick="getHtmlDart('rotROC')">rot ROC</button> <button onclick="getHtmlDart('usaflag')">USA Flag</button> <button onclick="getHtmlDart('grid')">Grid</button> <button onclick="getHtmlDart('xyplot')">X-Y Plot</button> <button onclick="getHtmlDart('slithery')">Slithery</button> <button onclick="getHtmlDart('html_tetris')">Tetris</button></p>
<h4>Flutter 程式</h4>
<p><button onclick="getFlutter('flutter0')">Flutter0</button> <button onclick="getFlutter('flutter1')">Flutter1</button> <button onclick="getFlutter('flutter2')">Flutter2</button> <button onclick="getFlutter('flutter3')">Flutter3</button> <button onclick="getFlutter('flutter4')">Flutter4</button> <button onclick="getFlutter('flutter_counter')">Flutter Counter</button> <button onclick="getFlutter('flutter_roc')">ROC Flag</button> <button onclick="getFlutter('flutter_mine1')">踩地雷 1</button> <button onclick="getFlutter('flutter_mine2')">踩地雷 2</button> <button onclick="getFlutter('flutter_mine3')">踩地雷 3</button> <button onclick="getFlutter('flutter_mine4')">踩地雷 4</button> <button onclick="getFlutter('flutter_dropdown')">Dropdown</button> <button onclick="getFlutter('flutter_multiselect')">Multiselect</button> <button onclick="getFlutter('flutter_search')">Search</button> <button onclick="getFlutter('flutter_login')">Login</button> <button onclick="getFlutter('flutter_temp')">溫度轉換</button> <button onclick="getFlutter('flutter_ttt')">Tic-Tac-Toe</button> <button onclick="getFlutter('flutter_calculator')">Calculator</button> <button onclick="getFlutter('flutter_mouse1')">Mouse1</button> <button onclick="getFlutter('flutter_paint1')">Paint1</button></p>
<!-- 內建放入的 Dart 原始碼 -->
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="600" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=mdecourse&amp;gh_repo=lab&amp;gh_path=downloads/dart_ex/mass_spring_damping&amp;theme=dark" width="800"></iframe></p><h3>WebGL</h3>
<h4>Web Graphics Library</h4>
<p><a href="https://tenso.rs/">https://tenso.rs/</a></p>
<p><a href="http://webglacademy.com/uPenn/">http://webglacademy.com/uPenn/ </a></p>
<p><a href="https://erkaman.github.io/regl-cnn/src/demo">https://erkaman.github.io/regl-cnn/src/demo</a></p>
<p><a href="https://github.com/mdecourse/WebGL">https://github.com/mdecourse/WebGL</a></p>
<p><a href="https://github.com/mdecourse/InteractiveWebGL">https://github.com/mdecourse/InteractiveWebGL</a></p>
<p><a href="https://github.com/mdecourse/Interactive-Computer-Graphics">https://github.com/mdecourse/Interactive-Computer-Graphics</a></p>
<p><a href="https://courses.engr.illinois.edu/cs418/fa2018/">https://courses.engr.illinois.edu/cs418/fa2018/</a></p>
<h4>Three.js:</h4>
<p style="padding-left: 30px;"><a href="https://davidlyons.dev/threejs-intro">https://davidlyons.dev/threejs-intro</a> </p>
<p style="padding-left: 30px;"><a href="https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene">https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/PacktPublishing/Learn-Three.js-Third-Edition">https://github.com/PacktPublishing/Learn-Three.js-Third-Edition</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/CS559">https://github.com/CS559</a></p>
<p style="padding-left: 30px;"><a href="https://cs.wellesley.edu/~cs307/threejs/demos/all-demos.html">https://cs.wellesley.edu/~cs307/threejs/demos/all-demos.html</a></p>
<p>three-1 source code:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;div id="three-1"&gt;&lt;/div&gt;
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r118/three.min.js"&gt;&lt;/script&gt;
&lt;script&gt;// &lt;![CDATA[
//已經導入 three.js r118
//已經建立 html div 標註
// 清除 html div 標註區 document.getElementById("three-1").innerHTML = "";

var container, camera, scene, renderer, mesh,

mouse = { x: 0, y: 0 },
objects = [],

count = 0,

CANVAS_WIDTH = 400,
CANVAS_HEIGHT = 400;

container = document.getElementById( 'three-1' );

renderer = new THREE.WebGLRenderer();
renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT );
container.appendChild( renderer.domElement );

var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera( 75, CANVAS_WIDTH/CANVAS_HEIGHT, 0.1, 1000 );

var geometry = new THREE.BoxGeometry( 3, 3, 3 );
var material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );
var cube = new THREE.Mesh( geometry, material );
scene.add( cube );

camera.position.z = 5;

var animate = function () {
    requestAnimationFrame( animate );

    cube.rotation.x += 0.01;
    cube.rotation.y += 0.01;

    renderer.render( scene, camera );
};

animate();
// ]]&gt;&lt;/script&gt;</pre>
<div id="three-1"></div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r118/three.min.js"></script>
<script>
//已經導入 three.js r118
//已經建立 html div 標註
// 清除 html div 標註區 document.getElementById("three-1").innerHTML = "";

var container, camera, scene, renderer, mesh,

mouse = { x: 0, y: 0 },
objects = [],

count = 0,

CANVAS_WIDTH = 400,
CANVAS_HEIGHT = 400;

container = document.getElementById( 'three-1' );

renderer = new THREE.WebGLRenderer();
renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT );
container.appendChild( renderer.domElement );

var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera( 75, CANVAS_WIDTH/CANVAS_HEIGHT, 0.1, 1000 );

var geometry = new THREE.BoxGeometry( 3, 3, 3 );
var material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );
var cube = new THREE.Mesh( geometry, material );
scene.add( cube );

camera.position.z = 5;

var animate = function () {
    requestAnimationFrame( animate );

    cube.rotation.x += 0.01;
    cube.rotation.y += 0.01;

    renderer.render( scene, camera );
};

animate();
</script>
<p>three-2 source code:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;div id="three-2"&gt;&lt;/div&gt;
&lt;script&gt;// &lt;![CDATA[
function init() {
    // create a scene, that will hold all our elements such as objects, cameras and lights.
    var scene = new THREE.Scene();

    CANVAS_WIDTH = 400,
    CANVAS_HEIGHT = 400;

    container = document.getElementById( 'three-2' );

    // create a camera, which defines where we're looking at.
    var camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH/CANVAS_HEIGHT , 0.1, 1000);

    // create a render and set the size
    var renderer = new THREE.WebGLRenderer();
    renderer.setClearColor(new THREE.Color(0x000000));
    renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT );
    container.appendChild( renderer.domElement );

    // show axes in the screen
    var axes = new THREE.AxesHelper(20);
    scene.add(axes);

    // create the ground plane
    var planeGeometry = new THREE.PlaneGeometry(60, 20);
    var planeMaterial = new THREE.MeshBasicMaterial({
        color: 0xAAAAAA
    });
    var plane = new THREE.Mesh(planeGeometry, planeMaterial);

    // rotate and position the plane
    plane.rotation.x = -0.5 * Math.PI;
    plane.position.set(15, 0, 0);

    // add the plane to the scene
    scene.add(plane);

    // create a cube
    var cubeGeometry = new THREE.BoxGeometry(4, 4, 4);
    var cubeMaterial = new THREE.MeshBasicMaterial({
        color: 0xFF0000,
        wireframe: true
    });
    var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);

    // position the cube
    cube.position.set(-4, 3, 0);

    // add the cube to the scene
    scene.add(cube);

    // create a sphere
    var sphereGeometry = new THREE.SphereGeometry(4, 20, 20);
    var sphereMaterial = new THREE.MeshBasicMaterial({
        color: 0x7777FF,
        wireframe: true
    });
    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);

    // position the sphere
    sphere.position.set(20, 4, 2);

    // add the sphere to the scene
    scene.add(sphere);

    // position and point the camera to the center of the scene
    camera.position.set(-30, 40, 30);
    camera.lookAt(scene.position);

    // add the output of the renderer to the html element
    //document.getElementById("three-2").appendChild(renderer.domElement);

    // render the scene
    renderer.render(scene, camera);
}
init();
// ]]&gt;&lt;/script&gt;</pre>
<div id="three-2"></div>
<script>
function init() {
    // create a scene, that will hold all our elements such as objects, cameras and lights.
    var scene = new THREE.Scene();

    CANVAS_WIDTH = 400,
    CANVAS_HEIGHT = 400;

    container = document.getElementById( 'three-2' );

    // create a camera, which defines where we're looking at.
    var camera = new THREE.PerspectiveCamera(45, CANVAS_WIDTH/CANVAS_HEIGHT , 0.1, 1000);

    // create a render and set the size
    var renderer = new THREE.WebGLRenderer();
    renderer.setClearColor(new THREE.Color(0x000000));
    renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT );
    container.appendChild( renderer.domElement );

    // show axes in the screen
    var axes = new THREE.AxesHelper(20);
    scene.add(axes);

    // create the ground plane
    var planeGeometry = new THREE.PlaneGeometry(60, 20);
    var planeMaterial = new THREE.MeshBasicMaterial({
        color: 0xAAAAAA
    });
    var plane = new THREE.Mesh(planeGeometry, planeMaterial);

    // rotate and position the plane
    plane.rotation.x = -0.5 * Math.PI;
    plane.position.set(15, 0, 0);

    // add the plane to the scene
    scene.add(plane);

    // create a cube
    var cubeGeometry = new THREE.BoxGeometry(4, 4, 4);
    var cubeMaterial = new THREE.MeshBasicMaterial({
        color: 0xFF0000,
        wireframe: true
    });
    var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);

    // position the cube
    cube.position.set(-4, 3, 0);

    // add the cube to the scene
    scene.add(cube);

    // create a sphere
    var sphereGeometry = new THREE.SphereGeometry(4, 20, 20);
    var sphereMaterial = new THREE.MeshBasicMaterial({
        color: 0x7777FF,
        wireframe: true
    });
    var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);

    // position the sphere
    sphere.position.set(20, 4, 2);

    // add the sphere to the scene
    scene.add(sphere);

    // position and point the camera to the center of the scene
    camera.position.set(-30, 40, 30);
    camera.lookAt(scene.position);

    // add the output of the renderer to the html element
    //document.getElementById("three-2").appendChild(renderer.domElement);

    // render the scene
    renderer.render(scene, camera);
}
init();
</script>
<h4>obj loader:</h4>
<div id="three-3"></div>
<script type="module">
import * as THREE from 'https://mde.tw/lab/downloads/threejs/three.module.js';
    import { OBJLoader } from 'https://mde.tw/lab/downloads/threejs/OBJLoader.js';

	var container;
	var camera, scene, renderer;
	var mouseX = 0, mouseY = 0;
        CANVAS_WIDTH = 400,
        CANVAS_HEIGHT = 400;
	var windowHalfX = CANVAS_WIDTH / 2;
	var windowHalfY = CANVAS_HEIGHT / 2;
	var object;

	function init() {
		camera = new THREE.PerspectiveCamera( 45, 400 / 400, 1, 2000 );
		camera.position.z = 250;

		// scene
		scene = new THREE.Scene();
		var ambientLight = new THREE.AmbientLight( 0xcccccc, 0.4 );
		scene.add( ambientLight );

		var pointLight = new THREE.PointLight( 0xffffff, 0.8 );
		camera.add( pointLight );
		scene.add( camera );

		// manager

		function loadModel() {
			object.traverse( function ( child ) {
			if ( child.isMesh ) child.material.map = texture;
			} );

			object.position.y = - 95;
			scene.add( object );
		}

		var manager = new THREE.LoadingManager( loadModel );
		manager.onProgress = function ( item, loaded, total ) {
		console.log( item, loaded, total );
		};

		// texture

		var textureLoader = new THREE.TextureLoader( manager );

		var texture = textureLoader.load( 'https://mde.tw/lab/downloads/threejs/uv_grid_opengl.jpg' );

		// model

		function onProgress( xhr ) {

			if ( xhr.lengthComputable ) {
			var percentComplete = xhr.loaded / xhr.total * 100;
			console.log( 'model ' + Math.round( percentComplete, 2 ) + '% downloaded' )
			}
		}

		function onError() {}
		var loader = new OBJLoader( manager );
		loader.load( 'https://mde.tw/lab/downloads/threejs/human.obj', function ( obj ) {
		object = obj;
		}, onProgress, onError );

		//
		renderer = new THREE.WebGLRenderer();
		renderer.setPixelRatio( window.devicePixelRatio );
		renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT);
		container = document.getElementById( 'three-3' );
		container.appendChild( renderer.domElement );
		document.addEventListener( 'mousemove', onDocumentMouseMove, false );
		//
		window.addEventListener( 'resize', onWindowResize, false );
	    } // ends init()

	        function onWindowResize() {
		    camera.aspect = CANVAS_WIDTH/ CANVAS_HEIGHT;
		    camera.updateProjectionMatrix();
		    renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT);
		}

	        function onDocumentMouseMove( event ) {
			mouseX = ( event.clientX - windowHalfX  ) / 2;
			mouseY = ( event.clientY - windowHalfY ) / 2;
		}

		//

	    function render() {
			camera.position.x += ( mouseX - camera.position.x ) * .05;
			camera.position.y += ( - mouseY - camera.position.y ) * .05;
			camera.lookAt( scene.position );
			renderer.render( scene, camera );
			}

	    function animate() {
			requestAnimationFrame( animate );
			render();
			}
init();
animate();
</script><h3>Lua</h3>
<p><a href="http://www.lua.org/">http://www.lua.org/</a></p>
<h4>Web based Lua:</h4>
<p style="padding-left: 30px;"><a href="/downloads/lua/index.html">/downloads/lua/index.html</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/fengari-lua/fengari-web">https://github.com/fengari-lua/fengari-web</a></p>
<h4>With Python:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/scoder/lupa">https://github.com/scoder/lupa</a></p>
<h4>For CoppeliaSim:</h4>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/en/scripts.htm">https://www.coppeliarobotics.com/helpFiles/en/scripts.htm</a></p>
<h4>For Webots:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/cyberbotics/webots/wiki/Lua-compilation">https://github.com/cyberbotics/webots/wiki/Lua-compilation</a></p>
<h4>For Nginx:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/openresty/lua-nginx-module">https://github.com/openresty/lua-nginx-module</a></p>
<h4>For Deep Learning:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/torch/torch7">https://github.com/torch/torch7</a> </p><h2>學號抽點</h2>
<p>為了編寫能夠進行修課學員學號抽點的程式, 提出下列兩種可行方案:</p>
<p style="padding-left: 30px;">將原本按照順序排列的學號次序弄亂, 然後按所需抽點的人數,  從已經弄亂的學號中一一取出</p>
<p style="padding-left: 30px;">依據所要抽點的人數, 建立一個由亂數組成的資料,  然後從順序排列的學號中抽出所要</p>
<h4>抽點的目的</h4>
<p style="padding-left: 30px;">查核學員學習情況</p>
<p style="padding-left: 30px;">讓抽點學員回報學習狀況</p>
<p style="padding-left: 30px;">交付任務, 要求抽點出的學員執行任務, 並交付報告</p><h3>亂數分組</h3>
<h4>evenGrouping.dart</h4>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import 'dart:html';
  
  InputElement studListUrl = querySelector("#studListUrl");
  String studUrl;
  // 將 Label 改為 Textarea, 避免產生過程結果嵌入所在頁面
  TextAreaElement output = querySelector("#output");
  
main() {
  querySelector("#submit").onClick.listen((e) =&gt; grouping());
}
  
grouping() {
  output.innerHtml = "";
  
  if (studListUrl.value != "") {
    studUrl = studListUrl.value;
  } else {
    studUrl = 'https://mde.tw/group/downloads/2019fall_cp_1a_list.txt';
  }
  
  // 組序由 1 開始
  int gth = 1;
  // 迴圈序號變數
  int i;
  int j;
  int total;
  int inc;
  // 每組學員暫存數列
  var gpList = [];
  // 全班分組數列
  var group = [];
  // 各組人數數列
  var numList = [];
  var courseTitle = 'cd2020';
  
  HttpRequest.getString(studUrl).then((String resp) {
    // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \n 轉為數列
    var studList = resp.trim().split("\n");
    // 數列利用 shuffle() 方法以隨機方法弄亂順序
    studList.shuffle();
    total = studList.length;
    output.text += "全班總計" + total.toString() + " 人\n";
    numList = getNumList(studList.length);
    inc = 0;
    for (i in numList){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth 有 " + i.toString() + " 人: \n";
      gpList = [];
      for (j = 0; j &lt; i; j++){
        output.text += studList[j+inc] + "\n";
        // 在各分組數列中加入將對應的學員學號
        gpList.add(studList[j+inc]);
      }
      gth = gth + 1;
      inc = inc + j;
        //output.text += studList[j] + "\n";
        // 逐步將各組暫存的分組數列加入全班分組數列中
      gpList.sort();
      group.add(gpList);
    }
    // 列出全班分組數列
    output.text += group.toString() + "\n";
    // 列出已經排序後的分組名單
    output.text += '=' * 25 + "\n";
    output.text += '以下為排序後的各組成員名單: \n';
    gth = 1;
    /*
    404231
    s4052
    4062
    s4072
    4082
    5072
    5083
    */
    // 先列出純文字以 \n 跳行組員資料
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth \n";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
        output.text += group[i][j] + "\n";
      }
      gth = gth + 1;
    }
     
    gth = 1;
    // 最後列出超文件以 &lt;br\&gt; 跳行組員資料, 包含倉儲與網站
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '\n' + '=' * 30 + "&lt;br \&gt;";
      output.text += "group $gth &lt;br \&gt;";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
          if (group[i][j].startsWith('4052') || group[i][j].startsWith('4072')) {
              output.text += "Repository: &lt;a href='https://github.com/s" + 
                                      group[i][j] + "/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://s" + group[i][j] + 
                                      ".github.io/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
          else {
              output.text += "Repository: &lt;a href='https://github.com/" + 
                                      group[i][j] + "/" + courseTitle +"'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://" + group[i][j] + 
                                      ".github.io/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
      }
      gth = gth + 1;
    }
  });
}
  
List getNumList(int total){
  // total student number
  // int total = 65;
  // initial each group expect to be "eachGrp" number of people
  int eachGrp = 10;
  // may divide into "grpNum" number of group
  int grpNum = total ~/ eachGrp;
  // vacant list
  var splits = [];
  // find remainder when total number divid into "grpNum" number of group
  int remainder = total % grpNum;
  // number of people in one group by calculation
  int calGrp = total ~/ grpNum;
  
  for (int i = 0; i &lt; grpNum; i++) {
    splits.add(calGrp);
  }
  //print(splits);
  
  for (int i = 0; i &lt; remainder; i++) {
    splits[i] += 1;
  }
  //print(splits);
  return splits;
 }</pre>
<h4>index.html</h4>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h1&gt;亂數分組:&lt;/h1&gt;
學員名單 URL: &lt;input type="text" id="studListUrl" size="50" value="https://mde.tw/wcm2020/downloads/2020spring_wcm_1a_list.txt"&gt;&lt;br /&gt;
&lt;input type="submit" value="開始分組" id="submit"&gt;&lt;br /&gt;
&lt;textarea id="output" cols="80" rows="10"&gt;&lt;/textarea&gt;</pre>
<p>style.css</p>
<pre class="brush:css;auto-links:false;toolbar:false" contenteditable="false">body {
  color: white;
  font-size: 20px;
}
 
input, select, textarea {
font-size: 100%;
}</pre>
<h4>get_student.py</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask, request 
from flask_cors import CORS
 
import requests
import bs4
import ssl
 
'''
https://s1.mde.nfu.edu.tw:7443/?semester=1082&amp;courseno=0767
cd
2a 1082/0767
2b 1082/0780
 
2a 1072/0777
2b 1072/0790
2a 1062/0788
2a 1062/0802
 
wcm
1082/0744
 
1072/0754
1062/0765
 
wcmj
1082/2418
'''
 
app = Flask(__name__)
CORS(app)
 
@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    if semester == None:
        semester = '1082'
    if courseno == None:
        courseno = '0744'
     
    url = 'https://osa.nfu.edu.tw/query/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}
 
    result = requests.post(url, data = post_var)
 
    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        output +=i[0] + "\n"
    return output
    #return  str(pselyr) + " + " +str(pseqno)
 
# 即使在近端仍希望以 https 模式下執行
context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
context.load_cert_chain('localhost.crt', 'localhost.key')
 
# 取 flaskapp.py 中的 uwsgi 變數設定
uwsgi = False
if uwsgi:
    # 表示程式在雲端執行
    application = app
else:
    # 表示在近端執行, 以 python3 wsgi.py 執行
    app.run(host='127.0.0.1', port=5443, debug=True, ssl_context=context)</pre>
<h4>nginx sites-available/default settings:</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">server {
    listen 8000;
    server_name s1.mde.nfu.edu.tw;
    charset utf-8;
     
    listen 7443 ssl;
  
    location /static {
        alias /home/kmol2019/course_studlist/static/;
    }
  
    location / {
        include uwsgi_params;
        uwsgi_pass  127.0.0.1:8087;
    }
     
    ssl_certificate /etc/stunnel/localhost.crt;
    ssl_certificate_key /etc/stunnel/localhost.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    try_files $uri $uri/ =404;
}</pre>
<h4>uwsgi7.ini</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">uwsgi]
socket = 127.0.0.1:8087
uid = kmol2019
gid = kmol2019
plugins-dir = /usr/lib/uwsgi/plugins/
plugin = python3
master = true
logto = /var/log/uwsgi/emperor.log
logfile-chown = kmol2019:kmol2019
processes = 4
threads = 2
chdir = /home/kmol2019/course_studlist
wsgi-file = /home/kmol2019/course_studlist/get_student.py</pre>
<h4>/etc/systemd/system/cmsimfly.service</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[Unit]
Description=uWSGI to serve CMSimfly
After=network.target
 
[Service]
User=kmol2019
Group=kmol2019
WorkingDirectory=/home/kmol2019/uwsgi_ini
ExecStart=/usr/local/bin/uwsgi --emperor /home/kmol2019/uwsgi_ini
 
[Install]
WantedBy=multi-user.target</pre>
<h4>random_select.dart</h4>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import 'dart:html';
import 'dart:convert';
 
SelectElement studListUrl = querySelector("#RstudListUrl");
String grpList;
InputElement numOfStud = querySelector("#RnumOfStud");
int num;
// 將 Label 改為 Textarea, 避免產生過程結果嵌入所在頁面
TextAreaElement output = querySelector("#Routput");
 
main() {
  querySelector("#Rsubmit").onClick.listen((e) =&gt; randomSelect());
}
 
randomSelect() {
  output.innerHtml = "";
 
  if (studListUrl.value != "") {
    grpList = studListUrl.value;
  } else {
    grpList = 'https://mde.tw/cd2020/downloads/2a_group_list.txt';
  }
 
  if (numOfStud.value != "") {
    num = int.parse(numOfStud.value);
  } else {
    num = 2;
  }
 
  HttpRequest.getString(grpList).then((String resp) {
    final replaced = resp.replaceAll("'", '');
    List studList = jsonDecode(replaced);
    for (int i = 0; i &lt; studList.length; i++) {
      // shuffle studList element
      studList[i].shuffle();
      // draw num of member from each group
      output.text += "-" * 20 + "\n";
      for (int j = 0; j &lt; num; j++) {
        output.text += "group ${i + 1}:" + studList[i][j].toString() + "\n";
      }
    }
  });
}</pre>
<h4>index.html</h4>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h1&gt;每組隨機抽選:&lt;/h1&gt;
學員名單 URL: 
&lt;select id="RstudListUrl"&gt;
  &lt;option value="https://mde.tw/cd2020/downloads/2a_group_list.txt" selected&gt;2a&lt;/option&gt;
  &lt;option value="https://mde.tw/cd2020/downloads/2b_group_list.txt"&gt;2b&lt;/option&gt;
&lt;/select&gt;&lt;br /&gt;
每組抽選人數: &lt;input type="text" id="RnumOfStud" size="2" value="1"&gt;&lt;br /&gt;
&lt;input type="submit" value="開始" id="Rsubmit"&gt;&lt;br /&gt;
&lt;textarea id="Routput" cols="80" rows="10"&gt;&lt;/textarea&gt;</pre>
<h4>main.css</h4>
<pre class="brush:css;auto-links:false;toolbar:false" contenteditable="false">body {
  color: white;
  font-size: 20px;
}
 
input, select, textarea {
font-size: 100%;
}</pre>
<h4>利用 Python 進行亂數分組:</h4>
<p>randomw6.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random
import requests
 
# getNumList 主要在每組最低人數下, 將不足 10 人的分組
# 平均分配至各組
def getNumList(total, eachGrp=10):
    # total is the number of students
    # each group at least 10 students
    #eachGrp = 10;
    # may divide into "grpNum" number of group
    grpNum = total // eachGrp;
    # check grpNum
    #print(grpNum)
    # vacan list
    splits = []
    # find remainder when total number divid into "grpNum" number of group
    remainder = total % grpNum
    # number of people in one group by calculation
    calGrp = total // grpNum
     
    for i in range(grpNum):
        splits.append(calGrp)
         
    # check first splits
    #print(splits)
   
    for i in range(remainder):
        splits[i] += 1
     
    # check final splits
    #print(splits);
    return splits;
 
# 儲存學生名單資料的 url
target_url = "http://mde.tw/cd2020/downloads/2020spring_cd_2a_list.txt"
# 利用 requests 讀取 url 中的資料
f = requests.get(target_url)
# get student list from target_url
# 利用 splitlines() 將資料放入數列 studList
studList = f.text.splitlines()
# 每組預計分組的最低人數
num_in_one_group = 10
# 每組學員暫存數列
gpList = []
# 全班分組數列
group = []
# 各組人數數列
numList = []
# get numList
numList = getNumList(len(studList), num_in_one_group)
# check numList
# 列出已經補齊的各組人數數列
print("預計各組人數數列:" + str(numList))
 
output = ""
gth = 1
inc = 0
 
# 弄亂 studList
random.shuffle(studList)
output += "以下為尚未排序前的各組學員學號: \n"
for i in numList:
    # 列印區隔符號
    output += '=' * 20 + "\n";
    output += "group " + str(gth) + " 有 " + str(i) + " 人: \n"
    # 每組學員暫存數列, 在此 reset
    gpList = []
    for j in range(i):
        output += studList[j+inc] + "\n"
        # 在各分組數列中加入將對應的學員學號
        gpList.append(studList[j+inc])
       
    gth = gth + 1
    inc = inc + j
    # 將各組學員數列依照學號排序
    gpList.sort()
    group.append(gpList)
 
# 列出尚未排序前的分組結果
print(output)
# 列出已經完成排序的分組數列
print("已經排序後的分組數列:" + str(group))
 
output = ""
# 列出已經排序後的分組名單
output += '=' * 25 + "\n"
output += '以下為排序後的各組成員名單:\n'
gth = 1
 
# 先列出純文字以 \n 跳行組員資料
for i in range(len(group)):
    # 列印區隔符號
    output += '=' * 20 + "\n"
    output += "group" + str(gth) + "\n"
    gpList = []
     
    for j in range(len(group[i])):
        output += str(group[i][j]) + "\n"
       
    gth = gth + 1
     
print(output)</pre>
<h3>隨機與基因演算</h3>
<p><a href="http://lab.kmol.info/blog/2015-cadp-w16.html">http://lab.kmol.info/blog/2015-cadp-w16.html</a></p>
<p><a href="https://github.com/DEAP/deap">https://github.com/DEAP/deap</a></p>
<p><a href="/downloads/ga/A genetic algorithm for bin packaging.pdf">A genetic algorithm for bin packaging.pdf</a></p>
<p><a href="/downloads/ga/An_Efficient_Algorithm_for_3D_Rectangular_Box_Packing.pdf">An_Efficient_Algorithm_for_3D_Rectangular_Box_Packing.pdf</a></p>
<p>RGA 為 Real-coded Genetic Algorithm, 也就是實數編碼基因演算法, 以下為平面四連桿機構, 令其移動桿三角形頂點通過特定的 10 個座標點的尺寸合成運算.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># https://github.com/flukeskywalker/PyRGA
# 原始程式為 Python2 修改為 Python3 格式
# 除了原先的最大化適應值外, 增加最小化方法設定
import numpy as np
import random
import math

# 請注意各代族群數必須為 4 的倍數
class GA: # popsize must be multiple of 4
    def __init__(self, obj, dim, popsize, ngen, pc, pm, etac, etam, min):
        self.EPSILON = 10e-6
        self.INFINITY = 10e6
        self.pop = []
        self.fits = []
        self.obj = obj
        self.dim = dim
        self.popsize = popsize
        self.ngen = ngen
        self.pc = pc
        self.pm = pm
        self.etac = etac
        self.etam = etam
        # min = 1 表最小化, min = -1 表最大化
        self.min = min
        self.RIGID = 0
        self.lowb = -self.INFINITY*np.ones(self.dim)
        self.highb = self.INFINITY*np.ones(self.dim)
        self.tourneylist = range(0, self.popsize)
        self.tourneysize = 2 # works for 2 for now
        self.bestmemyet = np.zeros(self.dim)
        # 若是求最大值
        if self.min == -1:
            self.bestfityet = -np.inf
        else:
        # 若是求最小值
            self.bestfityet = np.inf
        self.pop_init()

    def pop_init(self):
        self.pop = [np.random.rand(self.dim) for _ in range(self.popsize)]
        for member in self.pop:
            for i in range(self.dim):
                member[i] = self.lowb[i] + member[i]*(self.highb[i]-self.lowb[i])
        self.fits = [self.obj(member) for member in self.pop]
        #self.pop_print()
        return

    def setbounds(self, lows, highs):
        for i in range(self.dim):
            self.lowb[i] = lows[i]
            self.highb[i] = highs[i]
        self.pop_init()
        return

    def run(self):
        for gen in range(self.ngen):
            print("Generation ", gen)
            self.pop = self.getnewpop()
            self.eval_pop()
            #self.pop_print()
        return [self.bestmemyet, self.bestfityet]

    def getnewpop(self):
        newpop = []
        #self.tourneylist = range(0, self.popsize)
        random.shuffle(list(self.tourneylist))
        self.tourneypos = 0
        for i in range(0, self.popsize, 2):
            [p1, p2] = self.getparents() #return parents, not just indices
            [c1, c2] = self.xover(p1, p2) #return children, not just indices
            c1 = self.mutate(c1)
            c2 = self.mutate(c2)
            newpop.append(c1)
            newpop.append(c2)
        return newpop

    def getparents(self):
        if (self.popsize - self.tourneypos) &lt; self.tourneysize:
            random.shuffle(list(self.tourneylist))
            self.tourneypos = 0
        if self.min == -1:
            if (self.fits[self.tourneylist[self.tourneypos]]&gt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p1 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p1 = self.pop[self.tourneylist[self.tourneypos+1]]
        else:
            if (self.fits[self.tourneylist[self.tourneypos]]&lt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p1 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p1 = self.pop[self.tourneylist[self.tourneypos+1]]
        self.tourneypos += self.tourneysize

        if self.min == -1:
            if (self.fits[self.tourneylist[self.tourneypos]]&gt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p2 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p2 = self.pop[self.tourneylist[self.tourneypos+1]]
        else:
            if (self.fits[self.tourneylist[self.tourneypos]]&lt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p2 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p2 = self.pop[self.tourneylist[self.tourneypos+1]]
        self.tourneypos += self.tourneysize
        return [p1, p2]

    def xover(self, p1, p2): # Here p1 and p2 are pop members
        c1 = np.zeros_like(p1)
        c2 = np.zeros_like(p2)
        if random.random()&lt;=self.pc: # do crossover
            for i in range(p1.size):
                if random.random()&lt;0.5: # 50% variables crossover
                    [c1[i], c2[i]] = self.crossvars(p1[i], p2[i], self.lowb[i], self.highb[i])
                else:
                    [c1[i], c2[i]] = [p1[i], p2[i]]
        else:
            c1 = p1
            c2 = p2
        return [c1, c2]

    def crossvars(self, p1, p2, low, high): # Here p1 and p2 are variables
        if p1&gt;p2:
            p1, p2 = p2, p1 # p1 must be smaller
        mean = (p1+p2)*0.5
        diff = (p2-p1)
        dist = max(min(p1-low, high-p2), 0)
        if (self.RIGID and diff &gt; self.EPSILON):
            alpha = 1.0 + (2.0*dist/diff)
            umax = 1.0 - (0.5/pow(alpha, (self.etac+1.0)))
            seed = umax*random.random()
        else:
            seed = random.random()
        beta = self.getbeta(seed)
        if (abs(diff*beta) &gt; self.INFINITY):
            beta = self.INFINITY/diff
        c2 = mean + beta*0.5*diff
        c1 = mean - beta*0.5*diff
        c1 = max(low, min(c1, high))
        c2 = max(low, min(c2, high))
        return [c1, c2]

    def getbeta(self, seed):
        if (1 - seed) &lt; self.EPSILON:
            seed = 1 - self.EPSILON
        seed = max(0.0, seed)
        if seed &lt; 0.5:
            beta = pow(2.0*seed, (1.0/(self.etac+1.0)))
        else:
            beta = pow((0.5/(1.0-seed)), (1.0/(self.etac+1.0)))
        return beta

    def getdelta(self, seed, delta_low, delta_high):
        if seed &gt;= 1.0 - (self.EPSILON/1e3):
            return delta_high
        if seed &lt;= (self.EPSILON/1e3):
            return delta_low
        if seed &lt;= 0.5:
            dummy = 2.0*seed + (1.0 - 2.0*seed)*pow((1+delta_low), (self.etam+1.0))
            delta = pow(dummy, (1.0/(self.etam+1.0))) - 1.0
        else:
            dummy = 2.0*(1.0 - seed) + 2.0*(seed - 0.5)*pow((1-delta_high), (self.etam+1.0))
            delta = 1.0 - pow(dummy, (1.0/(self.etam+1.0)))
        return delta

    def mutate(self, member):
        mut_member = np.zeros_like(member)
        for i in range(member.size):
            low = self.lowb[i]
            high = self.highb[i]
            if random.random() &lt;= self.pm: # pm is simply the prob of a variable to mutate
                if self.RIGID:
                    value = member[i]
                    delta_low = max((low-value)/(high-low), -1.0)
                    delta_high = min((high-value)/(high-low), 1.0)
                    if abs(delta_low)&lt;abs(delta_high):
                        delta_high = -delta_low
                    else:
                        delta_low = -delta_high
                else:
                    delta_low = -1.0
                    delta_high = 1.0
                seed = random.random()
                delta = self.getdelta(seed, delta_low, delta_high)*(high-low)
                mut_member[i] = max(low, min(member[i] + delta, high))
            else:
                mut_member[i] = member[i]
        return mut_member

    def eval_pop(self):
        self.fits = [self.obj(member) for member in self.pop]
        # 若是最大化適應值題目者
        if self.min == -1:
            # 將所有適應值中最大者, 指向 bestindex
            bestindex = np.argmax(self.fits)
        else:
            # 將所有適應值中最大者, 指向 bestindex
            bestindex = np.argmin(self.fits)
        bestmember = self.pop[bestindex]
        bestfitness = self.fits[bestindex]
        # self.min = -1 for maximization, self.min = 1 for minimization
        if self.min == -1:
            # 若是在族群中的最佳適應值大於目前為止最佳的適應值
            if bestfitness &gt; self.bestfityet:
                # 則將此最大適應值指為目前為止最佳適應值
                self.bestfityet = bestfitness
                # 並且將最佳族群成員指向目前最佳成員
                self.bestmemyet = bestmember
        else:
            if bestfitness &lt; self.bestfityet:
                self.bestfityet = bestfitness
                self.bestmemyet = bestmember
        print("Current best: ", bestfitness, "Best yet: ", self.bestfityet)

    def pop_print(self):
        for i in range(self.popsize):
            print(self.pop[i], self.fits[i])
        return

# 若單獨存在則需導入 GA 所有方法
#import GA
#from GA import *
import numpy as np

def square(x):
    term1 = (x[0]*x[0]+x[1]-11.0)*(x[0]*x[0]+x[1]-11.0)
    term2 = (x[0]+x[1]*x[1]- 7.0)*(x[0]+x[1]*x[1]- 7.0)
    term3 = term1+term2
    return term3

# 最大化體積題目
def volume(x):
    surface = 80.0
    z = (surface-x[0]*x[1])/(2.0*(x[0]+x[1]))
    volume = x[0]*x[1]*z
    return volume


def miniex1(x):
    '''Minimizing Beale's function (optimal value f(3, 0.5) = 0):
    ga=GA(miniex1, dim=2, popsize=400, ngen=500, pc=0.9, pm=0.3, etac=2, etam=100, min=1)
    ga.setbounds(np.zeros(10), 10*np.ones(10))
    '''
    term1 = 1.5 - x[0] + x[0]*x[1]
    term2 = 2.25 - x[0] + x[0]*x[1]*x[1]
    term3 = 2.625 - x[0] + x[0]*x[1]*x[1]*x[1]
    return term1*term1 + term2*term2 + term3*term3

def miniex2(x):
    '''Schaffer function #2. Minimium at (0,0), equal to 0
    ga=GA(miniex2, dim=2, popsize=100, ngen=50, pc=0.9, pm=0.1, etac=2, etam=100, min=1)
    ga.setbounds(np.zeros(10), 10*np.ones(10))
    '''
    return 0.5 + (math.pow(math.sin(x[0]*x[0]-x[1]*x[1]), 2) - 0.5)/math.pow(1+0.001*(x[0]*x[0]+x[1]*x[1]), 2)

#ga=GA(square, dim=2, popsize=40, ngen=50, pc=0.9, pm=0.1, etac=2, etam=100, min=-1)
# min = -1 表示要最大化適應方程式的值, 若 min = 1 表示要最小化
#ga=GA(volume, dim=2, popsize=400, ngen=500, pc=0.9, pm=0.1, etac=2, etam=100, min=-1)
ga=GA(miniex1, dim=2, popsize=100, ngen=50, pc=0.9, pm=0.1, etac=2, etam=100, min=1)
ga.setbounds(np.zeros(10), 10*np.ones(10))
#ga.setbounds(-10*np.ones(10), 10*np.ones(10))
#ga.pop_init()
print(ga.run())</pre>
<p>利用 C 與 Differential Evolution 解上述相同問題的原始碼:</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// 必須在演算過程中, 設法限制各變數的上下限!!! 否則演化非常容易發散??
 
/***************************************************************
**                                                            **
**        D I F F E R E N T I A L     E V O L U T I O N       **
**                                                            **
** Program: de.c                                              **
** Version: 3.6                                               **
**                                                            **
** Authors: Dr. Rainer Storn                                  **
**          c/o ICSI, 1947 Center Street, Suite 600           **
**          Berkeley, CA 94707                                **
**          Tel.:   510-642-4274 (extension 192)              **
**          Fax.:   510-643-7684                              **
**          E-mail: storn@icsi.berkeley.edu                   **
**          WWW: http://http.icsi.berkeley.edu/~storn/        **
**          on leave from                                     **
**          Siemens AG, ZFE T SN 2, Otto-Hahn Ring 6          **
**          D-81739 Muenchen, Germany                         **
**          Tel:    636-40502                                 **
**          Fax:    636-44577                                 **
**          E-mail: rainer.storn@zfe.siemens.de               **
**                                                            **
**          Kenneth Price                                     **
**          836 Owl Circle                                    **
**          Vacaville, CA 95687                               **
**          E-mail: kprice@solano.community.net               ** 
**                                                            **
** This program implements some variants of Differential      **
** Evolution (DE) as described in part in the techreport      **
** tr-95-012.ps of ICSI. You can get this report either via   **
** ftp.icsi.berkeley.edu/pub/techreports/1995/tr-95-012.ps.Z  **
** or via WWW: http://http.icsi.berkeley.edu/~storn/litera.html*
** A more extended version of tr-95-012.ps is submitted for   **
** publication in the Journal Evolutionary Computation.       ** 
**                                                            **
** You may use this program for any purpose, give it to any   **
** person or change it according to your needs as long as you **
** are referring to Rainer Storn and Ken Price as the origi-  **
** nators of the the DE idea.                                 **
** If you have questions concerning DE feel free to contact   **
** us. We also will be happy to know about your experiences   **
** with DE and your suggestions of improvement.               **
**                                                            **
***************************************************************/
/**H*O*C**************************************************************
**                                                                  **
** No.!Version! Date ! Request !    Modification           ! Author **
** ---+-------+------+---------+---------------------------+------- **
**  1 + 3.1  +5/18/95+   -     + strategy DE/rand-to-best/1+  Storn **
**    +      +       +         + included                  +        **
**  1 + 3.2  +6/06/95+C.Fleiner+ change loops into memcpy  +  Storn **
**  2 + 3.2  +6/06/95+   -     + update comments           +  Storn **
**  1 + 3.3  +6/15/95+ K.Price + strategy DE/best/2 incl.  +  Storn **
**  2 + 3.3  +6/16/95+   -     + comments and beautifying  +  Storn **
**  3 + 3.3  +7/13/95+   -     + upper and lower bound for +  Storn **
**    +      +       +         + initialization            +        **
**  1 + 3.4  +2/12/96+   -     + increased printout prec.  +  Storn **
**  1 + 3.5  +5/28/96+   -     + strategies revisited      +  Storn **
**  2 + 3.5  +5/28/96+   -     + strategy DE/rand/2 incl.  +  Storn **
**  1 + 3.6  +8/06/96+ K.Price + Binomial Crossover added  +  Storn **
**  2 + 3.6  +9/30/96+ K.Price + cost variance output      +  Storn **
**  3 + 3.6  +9/30/96+   -     + alternative to ASSIGND    +  Storn **
**  4 + 3.6  +10/1/96+   -    + variable checking inserted +  Storn **
**  5 + 3.6  +10/1/96+   -     + strategy indic. improved  +  Storn **
**                                                                  **
***H*O*C*E***********************************************************/
 
#include "stdio.h"
#include "stdlib.h"
#include "math.h"
#include "memory.h"
#include &lt;time.h&gt;
 
// 最大族群數, NP
#define MAXPOP  5000
// 最大向量維度, D
#define MAXDIM  35
#define MAXIMAPROBLEM 0
#define PENALITY 1000
 
/*------Constants for rnd_uni()--------------------------------------------*/
 
#define IM1 2147483563
#define IM2 2147483399
#define AM (1.0/IM1)
#define IMM1 (IM1-1)
#define IA1 40014
#define IA2 40692
#define IQ1 53668
#define IQ2 52774
#define IR1 12211
#define IR2 3791
#define NTAB 32
#define NDIV (1+IMM1/NTAB)
#define EPS 1.2e-7
#define RNMX (1.0-EPS)
 
// 與機構合成相關的常數定義
#define PI 3.1415926
#define degree PI/180.0
#define mech_loop -1
#define NUM_OF_POINTS 10
 
/*------------------------Macros----------------------------------------*/
 
/*#define ASSIGND(a,b) memcpy((a),(b),sizeof(double)*D) */  /* quick copy by Claudio */
                                                           /* works only for small  */
                                                           /* arrays, but is faster.*/
 
/*------------------------Globals---------------------------------------*/
 
long  rnd_uni_init;                 /* serves as a seed for rnd_uni()   */
double c[MAXPOP][MAXDIM], d[MAXPOP][MAXDIM];
double (*pold)[MAXPOP][MAXDIM], (*pnew)[MAXPOP][MAXDIM], (*pswap)[MAXPOP][MAXDIM];
 
/*---------Function declarations----------------------------------------*/
 
void  assignd(int D, double a[], double b[]);
double rnd_uni(long *idum);    /* uniform pseudo random number generator */
double extern evaluate(int D, double tmp[], long *nfeval); /* obj. funct. */
 
// 與機構合成相關的函式宣告
double distance(double x0, double y0, double x1, double y1);
double rr(double L1, double dd, double theta);
struct Coord triangletip_coord( double x0, double y0, double R0, double R1, double x1, double y1, double localt);
void mechanism(double x0, double y0, double x1, double y1, double L1,
  double L2, double L3, double L5, double L6, double input_angles[NUM_OF_POINTS], struct Coord output_points[NUM_OF_POINTS]);
double error_function(struct Coord output_points[NUM_OF_POINTS], struct Coord target_points[NUM_OF_POINTS]);
 
struct Coord finaltip_coord(struct Coord tip1_coord, struct Coord tip2_coord, double r1, double r2);
 
/*---------Function definitions-----------------------------------------*/
// 指定向量 b 為 a
void  assignd(int D, double a[], double b[])
/**C*F****************************************************************
**                                                                  **
** Assigns D-dimensional vector b to vector a.                      **
** You might encounter problems with the macro ASSIGND on some      **
** machines. If yes, better use this function although it's slower. **
**                                                                  **
***C*F*E*************************************************************/
{
   int j;
   for (j=0; j&lt;D; j++)
   {
      a[j] = b[j];
   }
}
 
// 產生 0 ~ 1 間的亂數
double rnd_uni(long *idum)
/**C*F****************************************************************
**                                                                  **
** SRC-FUNCTION   :rnd_uni()                                        **
** LONG_NAME      :random_uniform                                   **
** AUTHOR         :(see below)                                      **
**                                                                  **
** DESCRIPTION    :rnd_uni() generates an equally distributed ran-  **
**                 dom number in the interval [0,1]. For further    **
**                 reference see Press, W.H. et alii, Numerical     **
**                 Recipes in C, Cambridge University Press, 1992.  **
**                                                                  **
** FUNCTIONS      :none                                             **
**                                                                  **
** GLOBALS        :none                                             **
**                                                                  **
** PARAMETERS     :*idum    serves as a seed value                  **
**                                                                  **
** PRECONDITIONS  :*idum must be negative on the first call.        **
**                                                                  **
** POSTCONDITIONS :*idum will be changed                            **
**                                                                  **
***C*F*E*************************************************************/
{
  long j;
  long k;
  static long idum2=123456789;
  static long iy=0;
  static long iv[NTAB];
  double temp;
 
  if (*idum &lt;= 0)
  {
    if (-(*idum) &lt; 1) *idum=1;
    else *idum = -(*idum);
    idum2=(*idum);
    for (j=NTAB+7;j&gt;=0;j--)
    {
      k=(*idum)/IQ1;
      *idum=IA1*(*idum-k*IQ1)-k*IR1;
      if (*idum &lt; 0) *idum += IM1;
      if (j &lt; NTAB) iv[j] = *idum;
    }
    iy=iv[0];
  }
  k=(*idum)/IQ1;
  *idum=IA1*(*idum-k*IQ1)-k*IR1;
  if (*idum &lt; 0) *idum += IM1;
  k=idum2/IQ2;
  idum2=IA2*(idum2-k*IQ2)-k*IR2;
  if (idum2 &lt; 0) idum2 += IM2;
  j=iy/NDIV;
  iy=iv[j]-idum2;
  iv[j] = *idum;
  if (iy &lt; 1) iy += IMM1;
  if ((temp=AM*iy) &gt; RNMX) return RNMX;
  else return temp;
 
}/*------End of rnd_uni()--------------------------*/
 
// 將上下限轉為全域變數
double inibound_h;      /* upper parameter bound              */
double inibound_l;      /* lower parameter bound              */
// 與機構合成相關的全域變數
// 宣告一個座標結構
struct Coord {
    double x;
    double y;
  // 這裡保留 double z;
};
 
main(int argc, char *argv[])
/**C*F****************************************************************
**                                                                  **
** SRC-FUNCTION   :main()                                           **
** LONG_NAME      :main program                                     **
** AUTHOR         :Rainer Storn, Kenneth Price                      **
**                                                                  **
** DESCRIPTION    :driver program for differential evolution.       **
**                                                                  **
** FUNCTIONS      :rnd_uni(), evaluate(), printf(), fprintf(),      **
**                 fopen(), fclose(), fscanf().                     **
**                                                                  **
** GLOBALS        :rnd_uni_init    input variable for rnd_uni()     **
**                                                                  **
** PARAMETERS     :argc            #arguments = 3                   **
**                 argv            pointer to argument strings      **
**                                                                  **
** PRECONDITIONS  :main must be called with three parameters        **
**                 e.g. like de1 &lt;input-file&gt; &lt;output-file&gt;, if     **
**                 the executable file is called de1.               **
**                 The input file must contain valid inputs accor-  **
**                 ding to the fscanf() section of main().          **
**                                                                  **
** POSTCONDITIONS :main() produces consecutive console outputs and  **
**                 writes the final results in an output file if    **
**                 the program terminates without an error.         **
**                                                                  **
***C*F*E*************************************************************/
 
{
   char  chr;             /* y/n choice variable                */
   char  *strat[] =       /* strategy-indicator                 */
   {
            "",
            "DE/best/1/exp",
            "DE/rand/1/exp",
            "DE/rand-to-best/1/exp",
            "DE/best/2/exp",
            "DE/rand/2/exp",
            "DE/best/1/bin",
            "DE/rand/1/bin",
            "DE/rand-to-best/1/bin",
            "DE/best/2/bin",
            "DE/rand/2/bin"
   };
 
   int   i, j, L, n;      /* counting variables                 */
   int   r1, r2, r3, r4;  /* placeholders for random indexes    */
   int   r5;              /* placeholders for random indexes    */
   int   D;               /* Dimension of parameter vector      */
   int   NP;              /* number of population members       */
   int   imin;            /* index to member with lowest energy */
   int   refresh;         /* refresh rate of screen output      */
   int   strategy;        /* choice parameter for screen output */
   int   gen, genmax, seed;   
 
   long  nfeval;          /* number of function evaluations     */
 
   double trial_cost;      /* buffer variable                    */
   // 將上下限轉為全域變數, 可能要根據各變數加以設定
   //double inibound_h;      /* upper parameter bound              */
   //double inibound_l;      /* lower parameter bound              */
   double tmp[MAXDIM], best[MAXDIM], bestit[MAXDIM]; /* members  */
   double cost[MAXPOP];    /* obj. funct. values                 */
   double cvar;            /* computes the cost variance         */
   double cmean;           /* mean cost                          */
   double F,CR;            /* control variables of DE            */
   double cmin;            /* help variables                     */
 
   FILE  *fpin_ptr;
   FILE  *fpout_ptr;
 
// 計算執行過程所需時間起點, 需要導入 time.h
  clock_t start = clock();
 
/*------Initializations----------------------------*/
 
 //if (argc != 3)                                 /* number of arguments */
 //{
    //printf("\nUsage : de &lt;input-file&gt; &lt;output-file&gt;\n");
    //exit(1);
 //}
 
// 將結果寫入 out.dat
 fpout_ptr = fopen("out.dat","w");          /* open output file for reading,    */
                                          /* to see whether it already exists */
 /*
 if ( fpout_ptr != NULL )
 {
    printf("\nOutput file %s does already exist, \ntype y if you ",argv[2]);
    printf("want to overwrite it, \nanything else if you want to exit.\n");
    chr = (char)getchar();
    if ((chr != 'y') &amp;&amp; (chr != 'Y'))
    {
      exit(1);
    }
    fclose(fpout_ptr);
 }
*/
 
/*-----Read input data------------------------------------------------*/
 
 //fpin_ptr   = fopen(argv[1],"r");
/*
 if (fpin_ptr == NULL)
 {
    printf("\nCannot open input file\n");
    exit(1);
 }*/
 
 //fscanf(fpin_ptr,"%d",&amp;strategy);       /*---choice of strategy-----------------*/
 //fscanf(fpin_ptr,"%d",&amp;genmax);         /*---maximum number of generations------*/
 //fscanf(fpin_ptr,"%d",&amp;refresh);        /*---output refresh cycle---------------*/
 //fscanf(fpin_ptr,"%d",&amp;D);              /*---number of parameters---------------*/
 //fscanf(fpin_ptr,"%d",&amp;NP);             /*---population size.-------------------*/
 //fscanf(fpin_ptr,"%lf",&amp;inibound_h);    /*---upper parameter bound for init-----*/
 //fscanf(fpin_ptr,"%lf",&amp;inibound_l);    /*---lower parameter bound for init-----*/
 //fscanf(fpin_ptr,"%lf",&amp;F);             /*---weight factor----------------------*/
 //fscanf(fpin_ptr,"%lf",&amp;CR);            /*---crossing over factor---------------*/
 //fscanf(fpin_ptr,"%d",&amp;seed);           /*---random seed------------------------*/
// 目前已經採用 strategy 3 可以得到最佳結果
  strategy = 3;
  genmax = 2000;
  refresh = 100;
  // 配合機構尺寸合成, 每一個體有 9 個機構尺寸值與 5 個通過點角度值
  D = 19;
  NP = 200;
  inibound_h = 50.;
  inibound_l = 0.;
/*得到最佳解
  F = 0.85;
CR 必須介於 0 to 1. 之間
  CR = 1.;
*/
  F = 0.85;
  CR = 1.;
  seed = 3;
 
 //fclose(fpin_ptr);
 
/*-----Checking input variables for proper range----------------------------*/
 
  if (D &gt; MAXDIM)
  {
     printf("\nError! D=%d &gt; MAXDIM=%d\n",D,MAXDIM);
     exit(1);
  }
  if (D &lt;= 0)
  {
     printf("\nError! D=%d, should be &gt; 0\n",D);
     exit(1);
  }
  if (NP &gt; MAXPOP)
  {
     printf("\nError! NP=%d &gt; MAXPOP=%d\n",NP,MAXPOP);
     exit(1);
  }
  if (NP &lt;= 0)
  {
     printf("\nError! NP=%d, should be &gt; 0\n",NP);
     exit(1);
  }
  if ((CR &lt; 0) || (CR &gt; 1.0))
  {
     printf("\nError! CR=%f, should be ex [0,1]\n",CR);
     exit(1);
  }
  if (seed &lt;= 0)
  {
     printf("\nError! seed=%d, should be &gt; 0\n",seed);
     exit(1);
  }
  if (refresh &lt;= 0)
  {
     printf("\nError! refresh=%d, should be &gt; 0\n",refresh);
     exit(1);
  }
  if (genmax &lt;= 0)
  {
     printf("\nError! genmax=%d, should be &gt; 0\n",genmax);
     exit(1);
  }
  if ((strategy &lt; 0) || (strategy &gt; 10))
  {
     printf("\nError! strategy=%d, should be ex {1,2,3,4,5,6,7,8,9,10}\n",strategy);
     exit(1);
  }
  if (inibound_h &lt; inibound_l)
  {
     printf("\nError! inibound_h=%f &lt; inibound_l=%f\n",inibound_h, inibound_l);
     exit(1);
  }
 
 
/*-----Open output file-----------------------------------------------*/
 
   //fpout_ptr   = fopen(argv[2],"w");  /* open output file for writing */
 
   //if (fpout_ptr == NULL)
   //{
      //printf("\nCannot open output file\n");
      //exit(1);
   //}
 
 
/*-----Initialize random number generator-----------------------------*/
 
 rnd_uni_init = -(long)seed;  /* initialization of rnd_uni() */
 nfeval       =  0;  /* reset number of function evaluations */
 
 
 
/*------Initialization------------------------------------------------*/
/*------Right now this part is kept fairly simple and just generates--*/
/*------random numbers in the range [-initfac, +initfac]. You might---*/
/*------want to extend the init part such that you can initialize-----*/
/*------each parameter separately.------------------------------------*/
 
   for (i=0; i&lt;NP; i++)
   {
      for (j=0; j&lt;D; j++) /* spread initial population members */
      {
        c[i][j] = inibound_l + rnd_uni(&amp;rnd_uni_init)*(inibound_h - inibound_l);
      }
      cost[i] = evaluate(D,c[i],&amp;nfeval); /* obj. funct. value */
   }
   cmin = cost[0];
   imin = 0;
   for (i=1; i&lt;NP; i++)
   {
     if(MAXIMAPROBLEM == 1)
     {
       // 改為最大化
        if (cost[i]&gt;cmin)
        {
          cmin = cost[i];
          imin = i;
        }
      }
      else
      {
        // 最小化問題
        if (cost[i]&lt;cmin)
        {
          cmin = cost[i];
          imin = i;
        }
      }
   }
 
   assignd(D,best,c[imin]);            /* save best member ever          */
   assignd(D,bestit,c[imin]);          /* save best member of generation */
 
   pold = &amp;c; /* old population (generation G)   */
   pnew = &amp;d; /* new population (generation G+1) */
 
/*=======================================================================*/
/*=========Iteration loop================================================*/
/*=======================================================================*/
 
   gen = 0;                          /* generation counter reset */
   while ((gen &lt; genmax) /*&amp;&amp; (kbhit() == 0)*/) /* remove comments if conio.h */
   {                                            /* is accepted by compiler    */
      gen++;
      imin = 0;
 
      for (i=0; i&lt;NP; i++)         /* Start of loop through ensemble  */
      {
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 2 !!!     */
       r1 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while(r1==i);            
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 3 !!!     */
       r2 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r2==i) || (r2==r1));
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 4 !!!     */
       r3 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r3==i) || (r3==r1) || (r3==r2));
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 5 !!!     */
       r4 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r4==i) || (r4==r1) || (r4==r2) || (r4==r3));
 
     do                        /* Pick a random population member */
     {                         /* Endless loop for NP &lt; 6 !!!     */
       r5 = (int)(rnd_uni(&amp;rnd_uni_init)*NP);
     }while((r5==i) || (r5==r1) || (r5==r2) || (r5==r3) || (r5==r4));
 
 
/*=======Choice of strategy===============================================================*/
/*=======We have tried to come up with a sensible naming-convention: DE/x/y/z=============*/
/*=======DE :  stands for Differential Evolution==========================================*/
/*=======x  :  a string which denotes the vector to be perturbed==========================*/
/*=======y  :  number of difference vectors taken for perturbation of x===================*/
/*=======z  :  crossover method (exp = exponential, bin = binomial)=======================*/
/*                                                                                        */
/*=======There are some simple rules which are worth following:===========================*/
/*=======1)  F is usually between 0.5 and 1 (in rare cases &gt; 1)===========================*/
/*=======2)  CR is between 0 and 1 with 0., 0.3, 0.7 and 1. being worth to be tried first=*/
/*=======3)  To start off NP = 10*D is a reasonable choice. Increase NP if misconvergence=*/
/*           happens.                                                                     */
/*=======4)  If you increase NP, F usually has to be decreased============================*/
/*=======5)  When the DE/best... schemes fail DE/rand... usually works and vice versa=====*/
 
 
/*=======EXPONENTIAL CROSSOVER============================================================*/
 
/*-------DE/best/1/exp--------------------------------------------------------------------*/
/*-------Our oldest strategy but still not bad. However, we have found several------------*/
/*-------optimization problems where misconvergence occurs.-------------------------------*/
     if (strategy == 1) /* strategy DE0 (not in our paper) */
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D);
       L = 0;
       do
       {                       
         tmp[n] = bestit[n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/rand/1/exp-------------------------------------------------------------------*/
/*-------This is one of my favourite strategies. It works especially well when the-------*/
/*-------"bestit[]"-schemes experience misconvergence. Try e.g. F=0.7 and CR=0.5---------*/
/*-------as a first guess.---------------------------------------------------------------*/
     else if (strategy == 2) /* strategy DE1 in the techreport */
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D);
       L = 0;
       do
       {                       
         tmp[n] = (*pold)[r1][n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/rand-to-best/1/exp-----------------------------------------------------------*/
/*-------This strategy seems to be one of the best strategies. Try F=0.85 and CR=1.------*/
/*-------If you get misconvergence try to increase NP. If this doesn't help you----------*/
/*-------should play around with all three control variables.----------------------------*/
     else if (strategy == 3) /* similiar to DE2 but generally better */
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
       L = 0;
       do
       {                       
         tmp[n] = tmp[n] + F*(bestit[n] - tmp[n]) + F*((*pold)[r1][n]-(*pold)[r2][n]);
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/best/2/exp is another powerful strategy worth trying--------------------------*/
     else if (strategy == 4)
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
       L = 0;
       do
       {                           
         tmp[n] = bestit[n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
/*-------DE/rand/2/exp seems to be a robust optimizer for many functions-------------------*/
     else if (strategy == 5)
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
       L = 0;
       do
       {                           
         tmp[n] = (*pold)[r5][n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         n = (n+1)%D;
         L++;
       }while((rnd_uni(&amp;rnd_uni_init) &lt; CR) &amp;&amp; (L &lt; D));
     }
 
/*=======Essentially same strategies but BINOMIAL CROSSOVER===============================*/
 
/*-------DE/best/1/bin--------------------------------------------------------------------*/
     else if (strategy == 6) 
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = bestit[n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         }
         n = (n+1)%D;
           }
     }
/*-------DE/rand/1/bin-------------------------------------------------------------------*/
     else if (strategy == 7) 
     {
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = (*pold)[r1][n] + F*((*pold)[r2][n]-(*pold)[r3][n]);
         }
         n = (n+1)%D;
           }
     }
/*-------DE/rand-to-best/1/bin-----------------------------------------------------------*/
     else if (strategy == 8) 
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = tmp[n] + F*(bestit[n] - tmp[n]) + F*((*pold)[r1][n]-(*pold)[r2][n]);
         }
         n = (n+1)%D;
           }
     }
/*-------DE/best/2/bin--------------------------------------------------------------------*/
     else if (strategy == 9)
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = bestit[n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         }
         n = (n+1)%D;
           }
     }
/*-------DE/rand/2/bin--------------------------------------------------------------------*/
     else
     { 
       assignd(D,tmp,(*pold)[i]);
       n = (int)(rnd_uni(&amp;rnd_uni_init)*D); 
           for (L=0; L&lt;D; L++) /* perform D binomial trials */
           {
         if ((rnd_uni(&amp;rnd_uni_init) &lt; CR) || L == (D-1)) /* change at least one parameter */
         {                       
           tmp[n] = (*pold)[r5][n] + 
              ((*pold)[r1][n]+(*pold)[r2][n]-(*pold)[r3][n]-(*pold)[r4][n])*F;
         }
         n = (n+1)%D;
           }
     }
 
 
/*=======Trial mutation now in tmp[]. Test how good this choice really was.==================*/
 
     trial_cost = evaluate(D,tmp,&amp;nfeval);  /* Evaluate new vector in tmp[] */
   if(MAXIMAPROBLEM == 1)
   {
    // 改為最大化
       if (trial_cost &gt;= cost[i])   /* improved objective function value ? */
       {                                  
          cost[i]=trial_cost;         
          assignd(D,(*pnew)[i],tmp);
          if (trial_cost&gt;cmin)          /* Was this a new minimum? */
          {                               /* if so...*/
             cmin=trial_cost;           /* reset cmin to new low...*/
             imin=i;
             assignd(D,best,tmp);           
          }                           
       }                            
       else
       {
          assignd(D,(*pnew)[i],(*pold)[i]); /* replace target with old value */
       }
    }
    else
    {
          // 最小化問題
       if (trial_cost &lt;= cost[i])   /* improved objective function value ? */
       {                                  
          cost[i]=trial_cost;         
          assignd(D,(*pnew)[i],tmp);
          if (trial_cost&lt;cmin)          /* Was this a new minimum? */
          {                               /* if so...*/
             cmin=trial_cost;           /* reset cmin to new low...*/
             imin=i;
             assignd(D,best,tmp);           
          }                           
       }                            
       else
       {
          assignd(D,(*pnew)[i],(*pold)[i]); /* replace target with old value */
       }
    }
 
      }   /* End mutation loop through pop. */
 
      assignd(D,bestit,best);  /* Save best population member of current iteration */
 
      /* swap population arrays. New generation becomes old one */
 
      pswap = pold;
      pold  = pnew;
      pnew  = pswap;
 
/*----Compute the energy variance (just for monitoring purposes)-----------*/
 
      cmean = 0.;          /* compute the mean value first */
      for (j=0; j&lt;NP; j++)
      {
         cmean += cost[j];
      }
      cmean = cmean/NP;
 
      cvar = 0.;           /* now the variance              */
      for (j=0; j&lt;NP; j++)
      {
         cvar += (cost[j] - cmean)*(cost[j] - cmean);
      }
      cvar = cvar/(NP-1);
 
 
/*----Output part----------------------------------------------------------*/
 
      if (gen%refresh==1)   /* display after every refresh generations */
      { /* ABORT works only if conio.h is accepted by your compiler */
    printf("\n\n                         PRESS ANY KEY TO ABORT"); 
    printf("\n\n\n Best-so-far cost funct. value=%-15.10g\n",cmin);
 
    for (j=0;j&lt;D;j++)
    {
      printf("\n best[%d]=%-15.10g",j,best[j]);
    }
    printf("\n\n Generation=%d  NFEs=%ld   Strategy: %s    ",gen,nfeval,strat[strategy]);
    printf("\n NP=%d    F=%-4.2g    CR=%-4.2g   cost-variance=%-10.5g\n",
               NP,F,CR,cvar);
      }
 
      fprintf(fpout_ptr,"%ld   %-15.10g\n",nfeval,cmin);
   }
/*=======================================================================*/
/*=========End of iteration loop=========================================*/
/*=======================================================================*/
 
/*-------Final output in file-------------------------------------------*/
 
 
   fprintf(fpout_ptr,"\n\n\n Best-so-far obj. funct. value = %-15.10g\n",cmin);
 
   for (j=0;j&lt;D;j++)
   {
     fprintf(fpout_ptr,"\n best[%d]=%-15.10g",j,best[j]);
   }
   fprintf(fpout_ptr,"\n\n Generation=%d  NFEs=%ld   Strategy: %s    ",gen,nfeval,strat[strategy]);
   fprintf(fpout_ptr,"\n NP=%d    F=%-4.2g    CR=%-4.2g    cost-variance=%-10.5g\n",
           NP,F,CR,cvar); 
 
  fclose(fpout_ptr);
 
  /* Code you want timed here */
  printf("Time elapsed: %f\n", ((double)clock() - start) / CLOCKS_PER_SEC);
   return(0);
}
 
/*-----------End of main()------------------------------------------*/
 
// 適應函式 fittness function (cost function)
double evaluate(int D, double tmp[], long *nfeval)
{
  // 先處理通過 5 個點的四連桿問題
  // x0, y0 為左方固定點座標, 必須在 0 ~ 100 間 - 設為 tmp[0], tmp[1]
  // x1, y1 為右方固定點座標, 必須在 0 ~ 100 間 - 設為 tmp[2], tmp[3]
  // L1 為第一桿件的長度, 必須 &gt; 0, 且小於 100 - 設為 tmp[4]
  // L2 為第二桿件的長度, 必須 &gt; 0, 且小於 100 - 設為 tmp[5]
  // L3 為第三桿件的長度, 必須 &gt; 0, 且小於 100 - 設為 tmp[6]
  // L5, L6 與 L2 共同圍出可動桿 L2 對應的三角形, 關注的三角形頂點即 L5 與 L6 的交點, 而 angle3 則為 L6 之對應角(為固定值)
  // L5, L6 必須 &gt; 0, 且小於 100 - 設為 tmp[7], tmp[8]
  // 以下的角度輸入值, 會隨著目標點數的增加而增加, 其索引值由 9 + 通過點數 - 1 決定, 5 點, 則索引至 13, 若通過 25 點, 則索引值為 9 + 24 = 33
  // input_angles[] 為五的輸入的雙浮點數角度值,代表個體的角度向量值 - 分別設為 tmp[9], tmp[10], tmp[11], tmp[12], tmp[13]
  // output_points[] 則為與 input_angles[] 對應的五個三角形的頂點值, 為座標結構值, 分別有 x 與 y 分量值
  // 當利用個體的向量值, 代入 mechanism 後所得到得 output_points[] 再與 target_points[] 進行 cost function 的誤差值最小化
  /* void mechanism(double x0, double y0, double x1, double y1, double L1,
  double L2, double L3, double L5, double L6, double input_angles[NUM_OF_POINTS], struct Coord output_points[NUM_OF_POINTS])*/
  struct Coord target_points[NUM_OF_POINTS], output_points[NUM_OF_POINTS];
  double input_angles[NUM_OF_POINTS], result;
  int i;
 
  (*nfeval)++;
 
  target_points[0].x = 1.0;
  target_points[0].y = 1.0;
 
  target_points[1].x = 2.0;
  target_points[1].y = 2.0;
 
  target_points[2].x = 3.0;
  target_points[2].y = 3.0;
 
  target_points[3].x = 4.0;
  target_points[3].y = 4.0;
 
  target_points[4].x = 5.0;
  target_points[4].y = 5.0;
 
  target_points[5].x = 6.0;
  target_points[5].y = 6.0;
 
  target_points[6].x = 7.0;
  target_points[6].y = 7.0;
 
  target_points[7].x = 8.0;
  target_points[7].y = 8.0;
 
  target_points[8].x = 9.0;
  target_points[8].y = 9.0;
 
  target_points[9].x = 10.0;
  target_points[9].y = 10.0;
 
  // 輸入角度值與 tmp[] 的設定
  for(i = 0; i &lt; NUM_OF_POINTS; i++)
  {
    input_angles[i] = tmp[i + 9];
  }
  // 呼叫 mechanism() 以便計算 output_points[]
  mechanism(tmp[0], tmp[1], tmp[2], tmp[3], tmp[4], tmp[5], tmp[6], tmp[7], tmp[8], input_angles, output_points);
 
  // for debug
  /*
  if(*nfeval%3000 == 0)
  {
    for(i = 0; i &lt; NUM_OF_POINTS; i++)
    {
      printf("%-15.10g : %-15.10g\n", output_points[i].x, output_points[i].y);
    }
    printf("#####################################\n");
  }
  */
  // 利用 output_points[] 與 target_points 計算誤差值, 該誤差值就是 cost
  result = error_function(output_points, target_points);
  // 這裡要分別針對各變數的約束條件與範圍值來設定傳回 PENALITY 或 誤差值 result
 
  // x0 與 x1 點位於 -500 與 500 中間
    for(i = 0; i &lt; 4; i++)
  {
    if(tmp[i] &lt; -50 || tmp[i] &gt; 50){
      return PENALITY;
    }
  }
 
  // 三個連桿值, 一定要為正
    for(i = 4; i &lt; 7; i++)
  {
    if(tmp[i] &lt; 0 || tmp[i] &gt; 50){
      return PENALITY;
    }
  }
 
    // L5 L6 可以為 0 或負值
    for(i = 7; i &lt; 9; i++)
  {
    if(tmp[i] &lt; -50 || tmp[i] &gt; 50){
      return PENALITY;
    }
  }
 
  // 角度值一定要大於 0
 
  for(i = 1; i &lt;= NUM_OF_POINTS; i++)
  {
    if((tmp[D-i] &lt; 0)){
      return PENALITY;
    }
  }
 
  return result;
 
  /*
   double result=0, surface = 80.0, z, volume, penality;
   (*nfeval)++;
   z = (surface-tmp[0]*tmp[1])/(2.0*(tmp[0]+tmp[1]));
   volume = tmp[0]*tmp[1]*z;
 
  if(volume &lt;= 0){
    return PENALITY;
  }
 
  if((tmp[0] &lt;= inibound_l)|| (tmp[0] &gt;inibound_h)){
    return PENALITY;
  }
 
  if((tmp[1] &lt;= inibound_l) || (tmp[1] &gt;inibound_h)){
    return PENALITY;
  }
  // volume must &gt;0 and max volume
  // 目前為最小化問題
   return 1+1/(volume*volume);
   */
}
 
struct Coord triangletip_coord( double x0, double y0, double R0, double R1, double x1, double y1, double localt)
{
    struct Coord tip_coord;
 
    if (localt&gt;=0 &amp;&amp; localt &lt;PI)
    {
        // 目前蓋掉的式子為利用手動代換出來的版本
        //x_value = ((x1-x0)*(-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2))/(2*sqrt(pow((y1-y0),2)+pow((x1-x0),2)))-(y1-y0)*(-mech_loop)*sqrt(fabs(pow(R0,2)-pow((-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2)),2)/(4*(pow((y1-y0),2)+pow((x1-x0),2))))))/sqrt(pow((y1-y0),2)+pow((x1-x0),2))+x0;
        // 以下的式子,先利用文字編輯器,將原先 stringout() 出來的  sqrt 替換成  sqrtt, 以防止被  maxima 中的 subst("^"=pow,expr) 所替換, subst 之後,再使用文字編輯器換回來,就可以得到正確的 C 對應碼.
        tip_coord.x = pow(sqrt(pow(y1-y0,2)+pow(x1-x0,2)),-1)*(mech_loop*(y1-y0)*sqrt(fabs(pow(R0,2)-pow(pow(y1-y0,2)+
    pow(x1-x0,2),-1)*pow(-pow(R1,2)+pow(R0,2)+pow(y1-y0,2)+pow(x1-x0,2),2)/4))+(x1-x0)*pow(sqrt(pow(y1-y0,2)+
    pow(x1-x0,2)),-1)*(-pow(R1,2)+pow(R0,2)+pow(y1-y0,2)+pow(x1-x0,2))/2)+x0;
    }
    else
    {
        // 目前蓋掉的式子為利用手動代換出來的版本
        //x_value = ((x1-x0)*(-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2))/(2*sqrt(pow((y1-y0),2)+pow((x1-x0),2)))-(y1-y0)*(mech_loop)*sqrt(fabs(pow(R0,2)-pow((-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2)),2)/(4*(pow((y1-y0),2)+pow((x1-x0),2))))))/sqrt(pow((y1-y0),2)+pow((x1-x0),2))+x0;
        tip_coord.x = pow(sqrt(pow(y1-y0,2)+pow(x1-x0,2)),-1)*(-mech_loop*(y1-y0)*sqrt(fabs(pow(R0,2)-pow(pow(y1-y0,2)+
    pow(x1-x0,2),-1)*pow(-pow(R1,2)+pow(R0,2)+pow(y1-y0,2)+pow(x1-x0,2),2)/4))+(x1-x0)*pow(sqrt(pow(y1-y0,2)+
    pow(x1-x0,2)),-1)*(-pow(R1,2)+pow(R0,2)+pow(y1-y0,2)+
    pow(x1-x0,2))/2)+x0;
    }
 
// 請注意,與 Maxma 公式中的差異為,在 sqrt()中加入 fabs(),避免因為sqrt()中的負值而造成 NaN (Not a Number 問題.
    if (localt&gt;=0 &amp;&amp; localt &lt;PI)
    {
        tip_coord.y = /*((x1-x0)*(-mech_loop)*sqrt(
                fabs(pow(R0,2)-pow((-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2)),2)
                /(4*(pow((y1-y0),2)+pow((x1-x0),2)))
                ))
                +(y1-y0)*(-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2))/(2*sqrt(pow((y1-y0),2)+pow((x1-x0),2))))/sqrt(pow((y1-y0),2)+pow((x1-x0),2))
                +y0;*/
                // 利用 sqrtt 居中進行代換所得到的式子
                pow(sqrt(pow(y1-y0,2)+pow(x1-x0,2)),-1)*((y1-y0)*pow(sqrt(pow(y1-y0,2)+pow(x1-x0,2)),-1)*(-pow(R1,2)+
    pow(R0,2)+pow(y1-y0,2)+pow(x1-x0,2))/2-mech_loop*(x1-x0)*sqrt(fabs(pow(R0,2)-pow(pow(y1-y0,2)+
    pow(x1-x0,2),-1)*pow(-pow(R1,2)+pow(R0,2)+pow(y1-y0,2)+pow(x1-x0,2),2)/4)))+y0;
 
    }
    else
    {
        tip_coord.y = /*((x1-x0)*(mech_loop)*sqrt(
                fabs(pow(R0,2)-pow((-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2)),2)
                /(4*(pow((y1-y0),2)+pow((x1-x0),2)))
                ))
                +(y1-y0)*(-pow(R1,2)+pow(R0,2)+pow((y1-y0),2)+pow((x1-x0),2))/(2*sqrt(pow((y1-y0),2)+pow((x1-x0),2))))/sqrt(pow((y1-y0),2)+pow((x1-x0),2))
                +y0;*/
                pow(sqrt(pow(y1-y0,2)+pow(x1-x0,2)),-1)*((y1-y0)*pow(sqrt(pow(y1-y0,2)+pow(x1-x0,2)),-1)*(-pow(R1,2)+
    pow(R0,2)+pow(y1-y0,2)+pow(x1-x0,2))/2+mech_loop*(x1-x0)*sqrt(fabs(pow(R0,2)-pow(pow(y1-y0,2)+
    pow(x1-x0,2),-1)*pow(-pow(R1,2)+pow(R0,2)+pow(y1-y0,2)+pow(x1-x0,2),2)/4)))+y0;
    }
 
  return tip_coord;
}
 
double distance(double x0, double y0, double x1, double y1)
{
    double distance_value;
    distance_value = sqrt(pow((x1-x0),2) + pow((y1-y0),2));
    return distance_value;
}
 
double rr(double L1, double dd, double theta)
{
    double rr_value;
    rr_value = sqrt(L1*L1+dd*dd-2*L1*dd*cos(theta));
    return rr_value;
}
 
// 輸入每一個體的變數向量, 然後求各三角形頂點的座標陣列[NUM_OF_POINTS]
void mechanism(double x0, double y0, double x1, double y1, double L1,
  double L2, double L3, double L5, double L6, double input_angles[NUM_OF_POINTS], struct Coord output_points[NUM_OF_POINTS])
{
  // 此函式要輸入控制變數, 然後計算機構尺寸合成的關注點座標位置
  // 以下為可能的處理變數宣告
  // 這裡希望能夠定義一個 struct 來處理座標點
  double rr_length, dd_length, angle;
  struct Coord link1_tip, link2_tip, triangle_tip;
    double angle2, angle3;
  int i;
 
  // 開始進行三角形頂點座標的計算
  // 以下變數由每一個體向量提供
  /*
    x0 = 0.0;
    y0 = 0.0;
    x1 = 10.0;
    y1 = 0.0;
    L1 = 5.0;
    L2 = 20;
    L3 = 10;
    L5 = 10;
    L6 = 10;
  */
  dd_length = distance(x0, y0, x1, y1);
  /* 設法表示 triangle 所對應的 local 角度,表示為已知變數與 t 的函式 */
  angle3 = acos((pow(L2,2)+pow(L5,2)-pow(L6,2))/(2*L2*L5));
 
  for(i = 0; i &lt; NUM_OF_POINTS; i++)
  {
    // 先建立第一點座標, 即 i=0 者
    // i=0;
    // angle = i*degree;
    /*
    // 利用角度增量進行運算, 相對於 input_angles[0] 作為基準
    if(i &gt; 0)
    {
      input_angles[i] = input_angles[i] + input_angles[i-1];
    }
    */
    angle = input_angles[i]*degree;
    rr_length = rr(L1, dd_length, angle);
    // 第一次三角形疊代
    link1_tip = triangletip_coord(x0, y0, L1, rr_length, x1, y1, angle);
    // 第二次三角形疊代
    /* 設法表示 link2 所對應的 local 角度,表示為已知變數與 t 的函式 */
    angle2 = acos((pow(L2,2)+pow(rr_length,2)-pow(L3,2))/(2*L2*rr_length));
    link2_tip = triangletip_coord(link1_tip.x, link1_tip.y, L2, L3, x1, y1, angle2);
    // 第三次三角形疊代
    //triangle_tip = triangletip_coord(link1_tip.x, link1_tip.y, L5, L6, link2_tip.x, link2_tip.y, angle3);
    // output_points[i] = triangletip_coord(link1_tip.x, link1_tip.y, L5, L6, link2_tip.x, link2_tip.y, angle3);
    // 這裡要嘗試利用 finaltip_coord() 求 tip3 座標, 而 L5 與 L6 可 0 可負
    output_points[i] = finaltip_coord(link1_tip, link2_tip, L5, L6);
  }
}
 
double error_function(struct Coord output_points[NUM_OF_POINTS], struct Coord target_points[NUM_OF_POINTS])
{
  double error = 0.0;
  int i;
  for(i = 0; i &lt; NUM_OF_POINTS; i++)
  {
    error += fabs(distance(output_points[i].x, output_points[i].y, target_points[i].x, target_points[i].y));
  }
  return error;
}
 
struct Coord finaltip_coord(struct Coord tip1_coord, struct Coord tip2_coord, double r1, double r2)
{
  struct Coord tip3_coord;
  double theta3, theta4, length3, length4;
  length3 = sqrt(pow(tip2_coord.x - tip1_coord.x,2) + pow(tip2_coord.y - tip1_coord.y,2));
  length4 = sqrt(pow(r1,2) + pow(r2,2));  
  theta3 = acos((tip2_coord.x - tip1_coord.x) / length3);
  theta4 = acos(r1 / length4);
  tip3_coord.x = tip1_coord.x + length4 * cos(theta3 + theta4);
  tip3_coord.y = tip1_coord.y + length4 * sin(theta3 + theta4);
 
  return tip3_coord;
}</pre>
<p><a href="https://www.analyzemath.com/calculus/Problems/maximum_volume_problem.html">https://www.analyzemath.com/calculus/Problems/maximum_volume_problem.html</a></p>
<h4>使用 <a href="https://github.com/DEAP/deap">Deap 程式庫</a>解紙盒最大體積設計題目:</h4>
<p><a href="https://github.com/DEAP/deap">https://github.com/DEAP/deap</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random
import array
from deap import base
from deap import benchmarks
from deap import creator
from deap import tools
import numpy
# Problem dimension, 最大化紙箱 volume
NDIM = 2
# minimization problem
# create(name, base, attributes)
'''
The weights are used in the fitness comparison. They are shared among all fitnesses of the same type. 
When subclassing Fitness, the weights must be defined as a tuple where each element is associated
 to an objective. A negative weight element corresponds to the minimization of the associated 
 objective and positive weight to the maximization.
'''
# weights 為 1.0 表示最大化 fitness
creator.create("FitnessMax", base.Fitness, weights=(1.0,))
'''
Evolution strategies individuals are slightly different as they contain generally two list, 
one for the actual individual and one for its mutation parameters. This time instead of using 
the list base class we will inherit from an array.array for both the individual and the strategy. 
Since there is no helper function to generate two different vectors in a single object we must 
define this function our-self. The initES() function receives two classes and instantiate them 
generating itself the random numbers in the intervals provided for individuals of a given size.
'''
creator.create("Individual", array.array, typecode='d', fitness=creator.FitnessMax)
toolbox = base.Toolbox()
# for sphere
#toolbox.register("attr_float", random.uniform, -3, 3)
'''
toolbox.register("attr_int", random.randint, INT_MIN, INT_MAX)
toolbox.register("attr_flt", random.uniform, FLT_MIN, FLT_MAX)
toolbox.register("individual", tools.initCycle, creator.Individual,
                 (toolbox.attr_int, toolbox.attr_flt), n=N_CYCLES)
'''
toolbox.register("attr_float", random.uniform, 0, 5)
toolbox.register("individual", tools.initRepeat, creator.Individual, toolbox.attr_float, NDIM)
toolbox.register("population", tools.initRepeat, list, toolbox.individual)
# selection method
toolbox.register("select", tools.selRandom, k=3)
# fitness function is benchmarks.sphere
# for sphere
#toolbox.register("evaluate", benchmarks.sphere)
'''
SURFACE = 80, 最大化 volume
z =(SURFACE - x*y)/(2.*(x+y));
    volume=x*y*z;
'''
def evalVolume(individual):
    SURFACE = 80.0
    x = individual[0]
    y = individual[1]
    # 確保 x 與 y 都是正值
    if x &lt; 0 or y &lt; 0:
        return -1000,
    z =(SURFACE - x*y)/(2.0*(x+y))
    volume = x*y*z
    return volume,

#toolbox.register("evaluate", benchmarks.ackley)
toolbox.register("evaluate", evalVolume)

def main():
    # Differential evolution parameters
    CR = 0.25
    F = 1 
    MU = 300
    NGEN = 100
     
    pop = toolbox.population(n=MU);
    hof = tools.HallOfFame(1)
    stats = tools.Statistics(lambda ind: ind.fitness.values)
    stats.register("avg", numpy.mean)
    stats.register("std", numpy.std)
    stats.register("min", numpy.min)
    stats.register("max", numpy.max)
     
    logbook = tools.Logbook()
    logbook.header = "gen", "evals", "std", "min", "avg", "max"
    
    # Evaluate the individuals
    fitnesses = toolbox.map(toolbox.evaluate, pop)
    for ind, fit in zip(pop, fitnesses):
        ind.fitness.values = fit
    
    record = stats.compile(pop)
    logbook.record(gen=0, evals=len(pop), **record)
    print(logbook.stream)
     
    for g in range(1, NGEN):
        for k, agent in enumerate(pop):
            a,b,c = toolbox.select(pop)
            y = toolbox.clone(agent)
            index = random.randrange(NDIM)
            for i, value in enumerate(agent):
                if i == index or random.random() &lt; CR:
                    y[i] = a[i] + F*(b[i]-c[i])
            y.fitness.values = toolbox.evaluate(y)
            if y.fitness &gt; agent.fitness:
                pop[k] = y
        hof.update(pop)
        record = stats.compile(pop)
        logbook.record(gen=g, evals=len(pop), **record)
        print(logbook.stream)
    print ("Best individual is ", hof[0], hof[0].fitness.values[0])
     
if __name__ == "__main__":
    main()</pre>
<p>紙盒最大體積化題目以 RGA 實數基因演算法解題:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># https://github.com/flukeskywalker/PyRGA
# 原始程式為 Python2 修改為 Python3 格式
# 除了原先的最大化適應值外, 增加最小化方法設定
import numpy as np
import random
import math

# 請注意各代族群數必須為 4 的倍數
class GA: # popsize must be multiple of 4
    def __init__(self, obj, dim, popsize, ngen, pc, pm, etac, etam, min):
        self.EPSILON = 10e-6
        self.INFINITY = 10e6
        self.pop = []
        self.fits = []
        self.obj = obj
        self.dim = dim
        self.popsize = popsize
        self.ngen = ngen
        self.pc = pc
        self.pm = pm
        self.etac = etac
        self.etam = etam
        # min = 1 表最小化, min = -1 表最大化
        self.min = min
        self.RIGID = 0
        self.lowb = -self.INFINITY*np.ones(self.dim)
        self.highb = self.INFINITY*np.ones(self.dim)
        self.tourneylist = range(0, self.popsize)
        self.tourneysize = 2 # works for 2 for now
        self.bestmemyet = np.zeros(self.dim)
        # 若是求最大值
        if self.min == -1:
            self.bestfityet = -np.inf
        else:
        # 若是求最小值
            self.bestfityet = np.inf
        self.pop_init()

    def pop_init(self):
        self.pop = [np.random.rand(self.dim) for _ in range(self.popsize)]
        for member in self.pop:
            for i in range(self.dim):
                member[i] = self.lowb[i] + member[i]*(self.highb[i]-self.lowb[i])
        self.fits = [self.obj(member) for member in self.pop]
        #self.pop_print()
        return

    def setbounds(self, lows, highs):
        for i in range(self.dim):
            self.lowb[i] = lows[i]
            self.highb[i] = highs[i]
        self.pop_init()
        return

    def run(self):
        for gen in range(self.ngen):
            print("Generation ", gen)
            self.pop = self.getnewpop()
            self.eval_pop()
            #self.pop_print()
        return [self.bestmemyet, self.bestfityet]

    def getnewpop(self):
        newpop = []
        #self.tourneylist = range(0, self.popsize)
        random.shuffle(list(self.tourneylist))
        self.tourneypos = 0
        for i in range(0, self.popsize, 2):
            [p1, p2] = self.getparents() #return parents, not just indices
            [c1, c2] = self.xover(p1, p2) #return children, not just indices
            c1 = self.mutate(c1)
            c2 = self.mutate(c2)
            newpop.append(c1)
            newpop.append(c2)
        return newpop

    def getparents(self):
        if (self.popsize - self.tourneypos) &lt; self.tourneysize:
            random.shuffle(list(self.tourneylist))
            self.tourneypos = 0
        if self.min == -1:
            if (self.fits[self.tourneylist[self.tourneypos]]&gt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p1 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p1 = self.pop[self.tourneylist[self.tourneypos+1]]
        else:
            if (self.fits[self.tourneylist[self.tourneypos]]&lt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p1 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p1 = self.pop[self.tourneylist[self.tourneypos+1]]
        self.tourneypos += self.tourneysize

        if self.min == -1:
            if (self.fits[self.tourneylist[self.tourneypos]]&gt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p2 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p2 = self.pop[self.tourneylist[self.tourneypos+1]]
        else:
            if (self.fits[self.tourneylist[self.tourneypos]]&lt;self.fits[self.tourneylist[self.tourneypos+1]]):
                p2 = self.pop[self.tourneylist[self.tourneypos]]
            else:
                p2 = self.pop[self.tourneylist[self.tourneypos+1]]
        self.tourneypos += self.tourneysize
        return [p1, p2]

    def xover(self, p1, p2): # Here p1 and p2 are pop members
        c1 = np.zeros_like(p1)
        c2 = np.zeros_like(p2)
        if random.random()&lt;=self.pc: # do crossover
            for i in range(p1.size):
                if random.random()&lt;0.5: # 50% variables crossover
                    [c1[i], c2[i]] = self.crossvars(p1[i], p2[i], self.lowb[i], self.highb[i])
                else:
                    [c1[i], c2[i]] = [p1[i], p2[i]]
        else:
            c1 = p1
            c2 = p2
        return [c1, c2]

    def crossvars(self, p1, p2, low, high): # Here p1 and p2 are variables
        if p1&gt;p2:
            p1, p2 = p2, p1 # p1 must be smaller
        mean = (p1+p2)*0.5
        diff = (p2-p1)
        dist = max(min(p1-low, high-p2), 0)
        if (self.RIGID and diff &gt; self.EPSILON):
            alpha = 1.0 + (2.0*dist/diff)
            umax = 1.0 - (0.5/pow(alpha, (self.etac+1.0)))
            seed = umax*random.random()
        else:
            seed = random.random()
        beta = self.getbeta(seed)
        if (abs(diff*beta) &gt; self.INFINITY):
            beta = self.INFINITY/diff
        c2 = mean + beta*0.5*diff
        c1 = mean - beta*0.5*diff
        c1 = max(low, min(c1, high))
        c2 = max(low, min(c2, high))
        return [c1, c2]

    def getbeta(self, seed):
        if (1 - seed) &lt; self.EPSILON:
            seed = 1 - self.EPSILON
        seed = max(0.0, seed)
        if seed &lt; 0.5:
            beta = pow(2.0*seed, (1.0/(self.etac+1.0)))
        else:
            beta = pow((0.5/(1.0-seed)), (1.0/(self.etac+1.0)))
        return beta

    def getdelta(self, seed, delta_low, delta_high):
        if seed &gt;= 1.0 - (self.EPSILON/1e3):
            return delta_high
        if seed &lt;= (self.EPSILON/1e3):
            return delta_low
        if seed &lt;= 0.5:
            dummy = 2.0*seed + (1.0 - 2.0*seed)*pow((1+delta_low), (self.etam+1.0))
            delta = pow(dummy, (1.0/(self.etam+1.0))) - 1.0
        else:
            dummy = 2.0*(1.0 - seed) + 2.0*(seed - 0.5)*pow((1-delta_high), (self.etam+1.0))
            delta = 1.0 - pow(dummy, (1.0/(self.etam+1.0)))
        return delta

    def mutate(self, member):
        mut_member = np.zeros_like(member)
        for i in range(member.size):
            low = self.lowb[i]
            high = self.highb[i]
            if random.random() &lt;= self.pm: # pm is simply the prob of a variable to mutate
                if self.RIGID:
                    value = member[i]
                    delta_low = max((low-value)/(high-low), -1.0)
                    delta_high = min((high-value)/(high-low), 1.0)
                    if abs(delta_low)&lt;abs(delta_high):
                        delta_high = -delta_low
                    else:
                        delta_low = -delta_high
                else:
                    delta_low = -1.0
                    delta_high = 1.0
                seed = random.random()
                delta = self.getdelta(seed, delta_low, delta_high)*(high-low)
                mut_member[i] = max(low, min(member[i] + delta, high))
            else:
                mut_member[i] = member[i]
        return mut_member

    def eval_pop(self):
        self.fits = [self.obj(member) for member in self.pop]
        # 若是最大化適應值題目者
        if self.min == -1:
            # 將所有適應值中最大者, 指向 bestindex
            bestindex = np.argmax(self.fits)
        else:
            # 將所有適應值中最大者, 指向 bestindex
            bestindex = np.argmin(self.fits)
        bestmember = self.pop[bestindex]
        bestfitness = self.fits[bestindex]
        # self.min = -1 for maximization, self.min = 1 for minimization
        if self.min == -1:
            # 若是在族群中的最佳適應值大於目前為止最佳的適應值
            if bestfitness &gt; self.bestfityet:
                # 則將此最大適應值指為目前為止最佳適應值
                self.bestfityet = bestfitness
                # 並且將最佳族群成員指向目前最佳成員
                self.bestmemyet = bestmember
        else:
            if bestfitness &lt; self.bestfityet:
                self.bestfityet = bestfitness
                self.bestmemyet = bestmember
        print("Current best: ", bestfitness, "Best yet: ", self.bestfityet)

    def pop_print(self):
        for i in range(self.popsize):
            print(self.pop[i], self.fits[i])
        return

# 若單獨存在則需導入 GA 所有方法
#import GA
#from GA import *
import numpy as np

def square(x):
    term1 = (x[0]*x[0]+x[1]-11.0)*(x[0]*x[0]+x[1]-11.0)
    term2 = (x[0]+x[1]*x[1]- 7.0)*(x[0]+x[1]*x[1]- 7.0)
    term3 = term1+term2
    return term3

# 最大化體積題目
def volume(x):
    surface = 80.0
    z = (surface-x[0]*x[1])/(2.0*(x[0]+x[1]))
    volume = x[0]*x[1]*z
    return volume


def miniex1(x):
    '''Minimizing Beale's function (optimal value f(3, 0.5) = 0):
    ga=GA(miniex1, dim=2, popsize=400, ngen=500, pc=0.9, pm=0.3, etac=2, etam=100, min=1)
    ga.setbounds(np.zeros(10), 10*np.ones(10))
    '''
    term1 = 1.5 - x[0] + x[0]*x[1]
    term2 = 2.25 - x[0] + x[0]*x[1]*x[1]
    term3 = 2.625 - x[0] + x[0]*x[1]*x[1]*x[1]
    return term1*term1 + term2*term2 + term3*term3

def miniex2(x):
    '''Schaffer function #2. Minimium at (0,0), equal to 0
    ga=GA(miniex2, dim=2, popsize=100, ngen=50, pc=0.9, pm=0.1, etac=2, etam=100, min=1)
    ga.setbounds(np.zeros(10), 10*np.ones(10))
    '''
    return 0.5 + (math.pow(math.sin(x[0]*x[0]-x[1]*x[1]), 2) - 0.5)/math.pow(1+0.001*(x[0]*x[0]+x[1]*x[1]), 2)

#ga=GA(square, dim=2, popsize=40, ngen=50, pc=0.9, pm=0.1, etac=2, etam=100, min=-1)
# min = -1 表示要最大化適應方程式的值, 若 min = 1 表示要最小化
ga=GA(volume, dim=2, popsize=400, ngen=500, pc=0.9, pm=0.1, etac=2, etam=100, min=-1)
#ga=GA(miniex1, dim=2, popsize=100, ngen=50, pc=0.9, pm=0.1, etac=2, etam=100, min=1)
ga.setbounds(np.zeros(10), 10*np.ones(10))
#ga.setbounds(-10*np.ones(10), 10*np.ones(10))
#ga.pop_init()
print(ga.run())</pre>
<p></p><h3>隨機與機器學習</h3>
<h4><a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97">隨機森林</a></h4><h2>調查表單</h2>
<p>現成工具</p>
<p style="padding-left: 30px;">Ｇoogle Form 與 Sheet - 學習如何使用</p>
<p style="padding-left: 30px;">如何取出 Sheet 資料, 加值再利用或進行其他處理？</p>
<p>能否自行建置調查表單, 該如何進行? 不同方法, 各有何優缺點?</p>
<p style="padding-left: 30px;">網際表單?</p>
<p style="padding-left: 30px;"></p><h2>學習功課表</h2>
<p>既有工具</p>
<p style="padding-left: 30px;">學校所提供的功課表？</p>
<p style="padding-left: 30px;">利用 Google Calendar 建立自己的行事曆</p>
<p style="padding-left: 30px;">如何針對既有工具所提供的資料再變化 (臨時調課) 或利用 (找出多人可用的共同時段) - Google Calendar 安排會議的衝突檢查</p>
<p>Google Calendar API</p>
<p style="padding-left: 30px;">活動排程 (Scheduling)</p>
<p>自己從學校主機撈出與課程相關的歷史資料, 建立統計數據表, 提供之後的選課參考</p><h2>解微積分</h2>
<p>計算機程式協助解微積分問題  - 利用圖表協助了解問題</p>
<p>計算機程式解數學問題 - 利用圖表了解問題與解題意義</p>
<p><a href="https://www.math.wisc.edu/~angenent/Free-Lecture-Notes/">https://www.math.wisc.edu/~angenent/Free-Lecture-Notes/</a></p>
<p><a href="https://blog.gtwang.org/useful-tools/sympy-python-library-for-symbolic-mathematics/3/">https://blog.gtwang.org/useful-tools/sympy-python-library-for-symbolic-mathematics/3/</a></p>
<p><a href="https://betterexplained.com/articles/a-gentle-introduction-to-learning-calculus/">https://betterexplained.com/articles/a-gentle-introduction-to-learning-calculus/</a></p>
<p><a href="https://towardsdatascience.com/taking-derivatives-in-python-d6229ba72c64">https://towardsdatascience.com/taking-derivatives-in-python-d6229ba72c64</a></p>
<p><a href="https://in.pycon.org/cfp/workshops-2019/proposals/learning-calculus-with-python~av3gb/">https://in.pycon.org/cfp/workshops-2019/proposals/learning-calculus-with-python~av3gb/</a></p>
<p><a href="/downloads/first_semester_calculus.pdf">first semester calculus.pdf</a></p>
<p><a href="/downloads/second_semester_calculus.pdf">second semester calculus.pdf</a></p>
<p><a href="/downloads/programming_and_mathematical_thinking_python.pdf">programming_and_mathematical_thinking_python.pdf</a></p>
<p><a href="/downloads/computational_physics_python.pdf">computational_physics_python.pdf</a></p><h2>活動管理</h2>
<p>寄送活動通知 - 利用 Gmail API 收發信件</p>
<p style="padding-left: 30px;"><a href="https://blog.mailtrap.io/send-emails-with-gmail-api/">https://blog.mailtrap.io/send-emails-with-gmail-api/</a> </p>
<p>活動照片彙整 - 現存工具與自建工具</p>
<p style="padding-left: 30px;">Google + Domain API 與 Oauth2 登入管理系統</p>
<p style="padding-left: 30px;">將活動相關的檔案與照片, 透過 Google Drive API 直接上傳至 Google Drive</p>
<p>活動報到與座位安排</p><h3>GDrive API</h3>
<p><a href="https://developers.google.com/drive/api/v3/enable-drive-api">Enable Google Drive API</a></p>
<p>Reference: <a href="https://github.com/chingjunetao/medium-article/blob/master/google-drive-with-python/google-drive-with-python.py">https://github.com/chingjunetao/medium-article/blob/master/google-drive-with-python/google-drive-with-python.py</a></p>
<p>需要設定 Google Drive API credential 並取得 client_secrets.json</p>
<p>利用</p>
<p style="padding-left: 30px;">pip install pydrive</p>
<p>安裝所需模組, 以下程式將會至 client_secrets.json 所對應帳號下的 Google Drive, 列出所有目錄與檔案, 並將 file_to_upload.pdf 上傳至 Google Drive 中的 uploaded 目錄.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive

gauth = GoogleAuth()
gauth.LocalWebserverAuth() # client_secrets.json need to be in the same directory as the script
drive = GoogleDrive(gauth)


# View all folders and file in your Google Drive
fileList = drive.ListFile({'q': "'root' in parents and trashed=false"}).GetList()
for file in fileList:
  print('Title: %s, ID: %s' % (file['title'], file['id']))
  # Get the folder ID that you want
  if(file['title'] == "uploaded"):
      fileID = file['id']

file1 = drive.CreateFile({"mimeType": "application/pdf", "parents": [{"kind": "drive#fileLink", "id": fileID}]})
file1.SetContentFile("file_to_upload.pdf")
file1.Upload() # Upload the file.
print('Created file %s with mimeType %s' % (file1['title'], file1['mimeType']))   </pre>
<p>For example, you might want to integrate your existing website with Drive API. In that case, you can customize authentication flow as follwing:<br/><br/>1. Get authentication Url from GetAuthUrl().<br/>2. Ask users to visit the authentication Url and grant access to your application. Retrieve authentication code manually by user or automatically by building your own oauth2callback.<br/>3. Call Auth(code) with the authentication code you retrieved from step 2.<br/><br/>Your settings.yaml will work for your customized authentication flow, too.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from pydrive.auth import GoogleAuth

gauth = GoogleAuth()
auth_url = gauth.GetAuthUrl() # Create authentication url user needs to visit
code = AskUserToVisitLinkAndGiveCode(auth_url) # Your customized authentication flow
gauth.Auth(code) # Authorize and build service from the code</pre>
<p><br/><br/></p><h1>網際內容管理</h1>
<p>Leo Editor: <a href="https://leoeditor.com/">https://leoeditor.com/</a></p>
<p>Leo Editor 簡介: <a href="https://kaleguy.github.io/leovue/#dashboard">https://kaleguy.github.io/leovue/#dashboard</a></p><h2>網際 PDF 檔案管理</h2>
<p><a href="http://mde.tw/wcm2020/content/Project.html">wcm2020 pypdf page</a></p><h2>網際圖檔管理</h2>
<p>圖檔管理</p>
<p>影像辨識</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/open?id=1WHaL0ye8_cGEl5kuLotLh3jBRwT-Hx9i">Learn Computer Vision using OpenCV.pdf </a>(登入 @gm 後下載)</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/open?id=14BFbDUx563oGOBlkjTOv6Qme2FgUnWD8">Practicle OpenCV.pdf </a>(登入 @gm 後下載)</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/open?id=1htX5woOugkk4Qjl2_711BrjKBziDwEjD">Pro Processing for Images and Computer Vision with OpenCV.pdf</a> (登入 @gm 後下載)</p>
<h2>線上會議</h2>
<p><a href="https://github.com/jitsi/jitsi-meet">https://github.com/jitsi/jitsi-meet</a> </p>
<p><a href="https://github.com/jitsi/docker-jitsi-meet">https://github.com/jitsi/docker-jitsi-meet</a> </p>
<p></p><h1>電腦輔助設計與實習</h1>
<h4>倉儲, 網頁與電腦輔助機械設計</h4>
<p style="padding-left: 30px;">資料版次 (分散式管理) 的重要性</p>
<p style="padding-left: 30px;">資料可被擷取 (網頁與可攜裝置擷取) 的重要性</p>
<p style="padding-left: 30px;">敏捷設計 (適應極端多變環境) 的重要性</p>
<p style="padding-left: 30px;">資料保全 ( 近端 + 雲端) 的重要性</p>
<h4>機械設計流程類別:</h4>
<p>1. 套用現有設計流程</p>
<p style="padding-left: 30px;">已知設計運算流程, 選擇使用現有工具, 套用現有流程, 選擇適合的設計參數, 以達成設計要求</p>
<p style="padding-left: 30px;">需要學習現有設計流程與工具的使用, 以便完成設計</p>
<p style="padding-left: 60px;">機械元件設計</p>
<p style="padding-left: 60px;">現有繪圖工具</p>
<p style="padding-left: 60px;">現有分析工具</p>
<h4 style="padding-left: 30px;">Projects:</h4>
<p style="padding-left: 60px;">齒輪減速箱設計</p>
<p style="padding-left: 90px;"><a href="/downloads/Manual Gearbox Design - Alec Stokes.pdf">Manual gearbox design.pdf</a></p>
<p style="padding-left: 90px;"><a href="/downloads/gearbox_design_project1.pdf">Gearbox design ex1.pdf</a></p>
<p style="padding-left: 90px;"><a href="/downloads/Gearbox_design2.pdf">Gearbox design ex2.pdf</a></p>
<p style="padding-left: 90px;"><a href="/downloads/GearBox-Matt.ppt2007.pdf">Gearbox design ex3.pdf</a></p>
<p style="padding-left: 90px;"><a href="/downloads/Direct_Gear_Design_method.pdf">Direct Gear Design Method.pdf</a></p>
<p style="padding-left: 90px;"><a href="/downloads/Direct Gear Design for Asymmetric ToothGears.pdf">Direct Gear Design for Asymmetric Tooth Gears.pdf</a></p>
<p style="padding-left: 90px;"><a href="/downloads/ippd.pdf">ippd.pdf </a>(整合產品流程開發）</p>
<p>2. 開發設計</p>
<p style="padding-left: 30px;">使用部分現有流程與工具, 開發新的設計流程與工具, 配合選擇適合的設計參數, 以達成設計要求</p>
<p style="padding-left: 30px;">需要整合新技術與新方法, 創造新流程與工具</p>
<p style="padding-left: 60px;">可攜程式套件</p>
<p style="padding-left: 60px;">將現有繪圖工具製作成可攜套件</p>
<p style="padding-left: 60px;">將現有必須上區域網路或廣域網路認證的繪圖工具, 製作為單機認證</p>
<p style="padding-left: 60px;">創造新的設計流程</p>
<p style="padding-left: 60px;">創造新的設計與分析工具</p>
<p>3. 新設計</p>
<p style="padding-left: 30px;">使用新的設計流程與工具, 配合選擇適合的設計參數, 以達成設計要求</p>
<p style="padding-left: 30px;">從參數模擬 + 數值分析設計轉為數據 ＋ 數值分析設計</p>
<p style="padding-left: 60px;">利用機器學習與人工智慧科技輔助產品開發</p><h2>產品設計繪圖</h2>
<p><a href="http://solvespace.com">Solvespace</a> (可自行編譯, 參數式 2D 與 3D 零組件設計繪圖) </p>
<p><a href="https://www.onshape.com/">OnShape</a> (網際協同 3D 參數零組件設計繪圖)  </p>
<p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">Fusion 360</a> (協同 3D 參數零組件設計繪圖)</p>
<hr/>
<p><a href="https://www.freecadweb.org/">FreeCAD</a> (參考用)</p>
<p>SolidWorks (參考用)</p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cad2019/content/Solidworks.html">cad2019 Solidworks page</a></p>
<p>NX (參考用)</p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cad2019/content/NX.html">cad2019 下載 NX 套件</a></p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cad2019/content/NX12%20%E7%A8%8B%E5%BC%8F.html">cad2019 NX12 page</a></p>
<p style="padding-left: 30px;"><a href="/downloads/NX-12-for-Engineering-Design.pdf">NX12 for engineering design.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/nxopen_getting_started_v12.pdf">nxopen_getting_started_v12.pdf</a></p>
<p style="padding-left: 30px;"><a href="http://nxjournaling.com/">http://nxjournaling.com/</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Setup_Eclipse_for_NXOpenPythonScripting.pdf">Setup_Eclipse_for_NXOpenPythonScripting.pdf</a></p>
<p style="padding-left: 30px;">run_journal 指令可以直接執行外部的 NXOpen Python Journal 程式</p>
<p>AutoDesk Inventor (參考用)</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="http://www.josh-ua.co/blog/2019/2/13/solidworks-vs-siemens-nx-vs-onshape">http://www.josh-ua.co/blog/2019/2/13/solidworks-vs-siemens-nx-vs-onshape</a></p><h2>產品設計分析</h2>
<h4>Digital Products:</h4>
<p style="padding-left: 30px;"><a href="https://drive.google.com/open?id=1mQm55d7Z03wCtBXX-rFNlfgVe1xIcIFJ">Computational Intelligence Techniques for New Product Design.pdf</a> (登入 @gm 後下載)</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/open?id=11lPfZ4VTGSKPGYSUI17WdyqiRqlArLYb">Digital Products.pdf</a> (登入 @gm 後下載)</p>
<h4>Computer aided engineering:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/Range-Software/range3">https://github.com/Range-Software/range3</a> </p>
<h4>Engineering Calculations:</h4>
<p style="padding-left: 30px;"><a href="https://www.engineeringclicks.com/category/calculations/">https://www.engineeringclicks.com/category/calculations/</a></p>
<p style="padding-left: 30px;"><a href="https://mechanicalc.com/calculators/">https://mechanicalc.com/calculators/</a></p>
<p style="padding-left: 30px;"><a href="https://www.engineersedge.com/calculators.htm">https://www.engineersedge.com/calculators.htm</a></p>
<p style="padding-left: 30px;"><a href="http://www.onlinestructuraldesign.com/calculations">http://www.onlinestructuraldesign.com/calculations</a> </p><h3>Machine Learning</h3>
<p><img alt="" class="add_border" height="272" src="/images/machine_learning_and_classical_programming.png" width="500"/></p>
<h4>Theory:</h4>
<p style="padding-left: 30px;"><a href="https://www.kaggle.com/learn/intro-to-machine-learning">https://www.kaggle.com/learn/intro-to-machine-learning</a> </p>
<p style="padding-left: 30px;"><a href="/downloads/An-introduction-to-neural-networks-for-beginners.pdf">An-introduction-to-neural-networks-for-beginners.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/adventuresinML/adventures-in-ml-code">https://github.com/adventuresinML/adventures-in-ml-code</a></p>
<p style="padding-left: 30px;"><a href="/downloads/neural_networks_overwiev.pdf">Neural Network Overview.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Brief_Intro_Neural_Networks.pdf">A Brief Introduction to Neural Networks.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://adventuresinmachinelearning.com/convolutional-neural-networks-tutorial-tensorflow/">https://adventuresinmachinelearning.com/convolutional-neural-networks-tutorial-tensorflow/</a></p>
<p style="padding-left: 30px;">Deep learning is a mathematical framework for learning representations from data. (深度學習是一種從數據中學習表述的數學框架)</p>
<p style="padding-left: 30px;"><a href="/downloads/Neural_Networks_and_Deep_Learning.pdf">Neural Networks and Deep Learning.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/chengfx/neural-networks-and-deep-learning-for-python3">https://github.com/chengfx/neural-networks-and-deep-learning-for-python3</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Dive_into_Deep_Learning.pdf">Dive into Deep Learning.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://d2l.ai/">https://d2l.ai/</a></p>
<p style="padding-left: 60px;"><a href="/downloads/Dive_into_Deep_Learning_zh.pdf">動手學深度學習.pdf</a></p>
<p style="padding-left: 60px;"><a href="https://zh.d2l.ai/">https://zh.d2l.ai/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/fchollet/deep-learning-with-python-notebooks">https://github.com/fchollet/deep-learning-with-python-notebooks</a></p>
<h4>Applications:</h4>
<p style="padding-left: 30px;"><a href="/downloads/Reaction_diffusion_system_prediction_based_on_convolutional_neural_network.pdf">Reaction_diffusion_system_prediction_based_on_convolutional_neural_network.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Solving high-dimensional partial differential equationsusing deep learning.pdf">Solving high-dimensional partial differential equationsusing deep learning.pdf</a></p><h3>Cython</h3>
<p><a href="https://cython.readthedocs.io">https://cython.readthedocs.io</a></p><h2>機電資整合控制</h2>
<h4>Mechatronic System Design</h4>
<p>Login to your gm email account and download <a href="https://drive.google.com/file/d/1KRb8vX_LB_3hkLwK1z1LOP8wl_StIZOR/view?usp=sharing">MSModelingAndTFApproaches.pdf</a>.</p>
<p style="padding-left: 30px;"><span>(Can we build online tools to facilitate these processes?)</span></p>
<p style="padding-left: 30px;">Mechatronic Systems</p>
<p style="padding-left: 30px;">Mathematical Modeling</p>
<p style="padding-left: 30px;">Transfer Function Approaches</p>
<p>Login to your gm email account and download <a href="https://drive.google.com/file/d/1y0QH6vI8uMymK9JI35EShVFS40Q8uwwq/view?usp=sharing">MechatronicDesignCases.pdf</a>.</p>
<p style="padding-left: 30px;">DC Motor Velocity and Position Control</p>
<p style="padding-left: 30px;">Balancing Robot Control</p>
<p style="padding-left: 30px;">Magnetic Levitation System</p>
<h2>產品生命週期管理</h2>
<p><a href="https://github.com/odoo/odoo">https://github.com/odoo/odoo</a></p>
<p><a href="https://www.odoo.com/documentation/user/13.0/">https://www.odoo.com/documentation/user/13.0/</a></p>
<p><a href="https://drive.google.com/open?id=1tYCGdd6FvVQa9yiCKtOfCKqed23tmpF5">odoo-development-readthedocs-io-en-20200518.pdf</a> (for @gm users only)</p>
<p><a href="https://drive.google.com/drive/folders/12iAsQ9sN_I6iHQiulSZ3MQzyXYFU1BrJ">Download PLM ebooks</a> (for @gm users only)</p>
<p></p><h1>協同產品設計實習</h1>
<h4>參考資料:</h4>
<p style="padding-left: 30px;"><a href="https://en.wikipedia.org/wiki/Digital_twin">Digital Twin</a></p>
<p style="padding-left: 30px;"><a href="/get_page/%E5%8D%94%E5%90%8C%E7%94%A2%E5%93%81%E8%A8%AD%E8%A8%88%E5%AF%A6%E7%BF%92/A Digital Twin Approach to Improve MachineTools Lifecycle">2019 Twin Control.pdf</a> - A Digital Twin Approach to Improve MachineTools Lifecycle $($for @gm users only$)$</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/open?id=12OB79G-XElbCiz2fZ6GyVBpoA1s74qTl">2015 Mac Protocol for Cyber-Physical Systems.pdf</a> $($for @gm users only$)$</p>
<p style="padding-left: 30px;"><a href="https://colab.research.google.com/notebooks/intro.ipynb">https://colab.research.google.com/notebooks/intro.ipynb</a></p>
<p>以未來科技家庭中的先進產品開發為例</p>
<p>可折疊與拼裝組合的各種用途桌椅</p>
<p>可折疊與方便居家儲藏與吊掛的家庭成員自行車</p>
<p>多功能居家隔音與空氣濾清門窗組</p>
<p>家庭遊樂設備, 機電整合多功能櫥櫃</p>
<p>集手足球, 撞球與彈珠台於一身的組合式遊樂中心</p>
<p>STEM 導向機電資整合式運動遊樂器</p>
<p style="padding-left: 30px;">智慧功能機器人</p>
<p style="padding-left: 30px;">能克服障礙物並爬樓梯的激動玩具車</p>
<p style="padding-left: 30px;">折疊省力多功能搬運推車</p>
<p style="padding-left: 30px;">推高自走玩具車</p>
<p style="padding-left: 30px;">自走式自動充電吸塵機器人</p>
<p>S — Science（科學）<br/>T — Technology（技術）<br/>E — Engineering（工程）<br/>M — Mathematics（數學）</p>
<p></p><h2>兩人一組產品開發</h2>
<p>兩人共同快速 (一週) 開發一組產品設計與實作 (分組自評與互評, 說明遭遇問題與解決方法)</p>
<p>報告與檢討 (一週)</p>
<h2>四人一組產品開發</h2>
<p>四人共同快速 (兩週) 開發一組產品設計與實作</p>
<p>報告與檢討 (一週)</p>
<h2>八人一組產品開發</h2>
<p>八人共同快速 (三週) 開發一組產品設計與實作</p>
<p>報告與檢討 (一週) 期中考週</p>
<h2>十六人一組產品開發</h2>
<p>十六人共同快速 (三週) 開發一組產品設計與實作</p>
<p>報告與檢討 (一週)</p>
<h2>三十二人一組產品開發</h2>
<p>三十二人共同快速 (四週) 開發一組產品設計與實作</p>
<p>報告與檢討 (一週) 期末考週</p>
<p></p>